// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");
var Test_Spec_Assertions = require("../Test.Spec.Assertions/index.js");
var shouldStartWith = function (dictMonadThrow) {
    return function (s) {
        return function (prefix) {
            return Control_Applicative.when((dictMonadThrow.Monad0()).Applicative0())(!$foreign["_startsWith"](prefix)(s))(Test_Spec_Assertions.fail(dictMonadThrow)(Data_Show.show(Data_Show.showString)(s) + (" does not start with " + Data_Show.show(Data_Show.showString)(prefix))));
        };
    };
};
var shouldNotContain = function (dictMonadThrow) {
    return function (s) {
        return function (subs) {
            return Control_Applicative.when((dictMonadThrow.Monad0()).Applicative0())(Data_String_CodeUnits.contains(subs)(s))(Test_Spec_Assertions.fail(dictMonadThrow)(Data_Show.show(Data_Show.showString)(subs) + (" \u2208 " + Data_Show.show(Data_Show.showString)(s))));
        };
    };
};
var shouldEndWith = function (dictMonadThrow) {
    return function (s) {
        return function (suffix) {
            return Control_Applicative.when((dictMonadThrow.Monad0()).Applicative0())(!$foreign["_endsWith"](suffix)(s))(Test_Spec_Assertions.fail(dictMonadThrow)(Data_Show.show(Data_Show.showString)(s) + (" does not end with " + Data_Show.show(Data_Show.showString)(suffix))));
        };
    };
};
var shouldContain = function (dictMonadThrow) {
    return function (s) {
        return function (subs) {
            return Control_Applicative.when((dictMonadThrow.Monad0()).Applicative0())(!Data_String_CodeUnits.contains(subs)(s))(Test_Spec_Assertions.fail(dictMonadThrow)(Data_Show.show(Data_Show.showString)(subs) + (" \u2209 " + Data_Show.show(Data_Show.showString)(s))));
        };
    };
};
module.exports = {
    shouldContain: shouldContain,
    shouldNotContain: shouldNotContain,
    shouldStartWith: shouldStartWith,
    shouldEndWith: shouldEndWith
};
