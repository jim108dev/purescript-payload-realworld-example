// Generated by purs version 0.13.8
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Except = require("../Control.Monad.Except/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Void = require("../Data.Void/index.js");
var Foreign = require("../Foreign/index.js");
var Foreign_Generic_Internal = require("../Foreign.Generic.Internal/index.js");
var Foreign_Index = require("../Foreign.Index/index.js");
var Foreign_NullOrUndefined = require("../Foreign.NullOrUndefined/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Record = require("../Record/index.js");
var Record_Builder = require("../Record.Builder/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var TaggedObject = (function () {
    function TaggedObject(value0) {
        this.value0 = value0;
    };
    TaggedObject.create = function (value0) {
        return new TaggedObject(value0);
    };
    return TaggedObject;
})();
var GenericEncodeArgs = function (encodeArgs) {
    this.encodeArgs = encodeArgs;
};
var GenericEncode = function (encodeOpts) {
    this.encodeOpts = encodeOpts;
};
var GenericDecodeArgs = function (decodeArgs) {
    this.decodeArgs = decodeArgs;
};
var GenericDecode = function (decodeOpts) {
    this.decodeOpts = decodeOpts;
};
var GenericCountArgs = function (countArgs) {
    this.countArgs = countArgs;
};
var EncodeWithOptions = function (encodeWithOptions) {
    this.encodeWithOptions = encodeWithOptions;
};
var EncodeRecord = function (encodeRecordWithOptions) {
    this.encodeRecordWithOptions = encodeRecordWithOptions;
};
var Encode = function (encode) {
    this.encode = encode;
};
var DecodeWithOptions = function (decodeWithOptions) {
    this.decodeWithOptions = decodeWithOptions;
};
var DecodeRecord = function (decodeRecordWithOptions) {
    this.decodeRecordWithOptions = decodeRecordWithOptions;
};
var Decode = function (decode) {
    this.decode = decode;
};
var voidEncode = new Encode(Data_Void.absurd);
var voidDecode = new Decode(function (v) {
    return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(new Data_Either.Left(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Foreign.ForeignError("Decode: void"))));
});
var unitEncode = new Encode(function (v) {
    return Foreign.unsafeToForeign({});
});
var unitDecode = new Decode(function (v) {
    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit);
});
var stringEncode = new Encode(Foreign.unsafeToForeign);
var stringDecode = new Decode(Foreign.readString);
var numberEncode = new Encode(Foreign.unsafeToForeign);
var numberDecode = new Decode(Foreign.readNumber);
var intEncode = new Encode(Foreign.unsafeToForeign);
var intDecode = new Decode(Foreign.readInt);
var genericEncodeArgsNoArguments = new GenericEncodeArgs(function (v) {
    return Data_Monoid.mempty(Data_Monoid.monoidFn(Data_List_Types.monoidList));
});
var genericDecodeNoConstructors = new GenericDecode(function (opts) {
    return function (v) {
        return Foreign.fail(new Foreign.ForeignError("No constructors"));
    };
});
var genericDecodeArgsNoArguments = new GenericDecodeArgs(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Data_List_Types.Nil) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                    result: Data_Generic_Rep.NoArguments.value,
                    rest: Data_List_Types.Nil.value,
                    next: v1
                });
            };
            return Foreign.fail(new Foreign.ForeignError("Too many constructor arguments"));
        };
    };
});
var genericCountArgsNoArguments = new GenericCountArgs(function (v) {
    return new Data_Either.Left(Data_Generic_Rep.NoArguments.value);
});
var genericCountArgsArgument = new GenericCountArgs(function (v) {
    return new Data_Either.Right(1);
});
var foreignEncode = new Encode(Control_Category.identity(Control_Category.categoryFn));
var foreignDecode = new Decode(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
var encodeWithOptions = function (dict) {
    return dict.encodeWithOptions;
};
var genericEncodeArgsArgument = function (dictEncodeWithOptions) {
    return new GenericEncodeArgs(function (opts) {
        return function (v) {
            return Data_List.singleton(encodeWithOptions(dictEncodeWithOptions)(opts)(v));
        };
    });
};
var encodeRecordWithOptions = function (dict) {
    return dict.encodeRecordWithOptions;
};
var encodeWithOptionsRecord = function (dictRowToList) {
    return function (dictEncodeRecord) {
        return new EncodeWithOptions(function (opts) {
            var $148 = encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts);
            return function ($149) {
                return Foreign.unsafeToForeign($148($149));
            };
        });
    };
};
var encodeRecordNil = new EncodeRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return Foreign_Object.empty;
        };
    };
});
var encodeRecordCons = function (dictCons) {
    return function (dictEncodeRecord) {
        return function (dictIsSymbol) {
            return function (dictEncodeWithOptions) {
                return new EncodeRecord(function (v) {
                    return function (opts) {
                        return function (rec) {
                            var obj = encodeRecordWithOptions(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(rec);
                            var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                            return Foreign_Object.insert(opts.fieldTransform(l))(encodeWithOptions(dictEncodeWithOptions)(opts)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(rec)))(obj);
                        };
                    };
                });
            };
        };
    };
};
var encodeOpts = function (dict) {
    return dict.encodeOpts;
};
var genericEncodeNoConstructors = new GenericEncode(function (opts) {
    return function (a) {
        return encodeOpts(genericEncodeNoConstructors)(opts)(a);
    };
});
var genericEncodeSum = function (dictGenericEncode) {
    return function (dictGenericEncode1) {
        return new GenericEncode(function (opts) {
            return function (v) {
                if (v instanceof Data_Generic_Rep.Inl) {
                    return encodeOpts(dictGenericEncode)({
                        sumEncoding: opts.sumEncoding,
                        unwrapSingleConstructors: false,
                        unwrapSingleArguments: opts.unwrapSingleArguments,
                        fieldTransform: opts.fieldTransform
                    })(v.value0);
                };
                if (v instanceof Data_Generic_Rep.Inr) {
                    return encodeOpts(dictGenericEncode1)({
                        sumEncoding: opts.sumEncoding,
                        unwrapSingleConstructors: false,
                        unwrapSingleArguments: opts.unwrapSingleArguments,
                        fieldTransform: opts.fieldTransform
                    })(v.value0);
                };
                throw new Error("Failed pattern match at Foreign.Generic.Class (line 351, column 1 - line 355, column 85): " + [ opts.constructor.name, v.constructor.name ]);
            };
        });
    };
};
var encodeArgs = function (dict) {
    return dict.encodeArgs;
};
var genericEncodeArgsProduct = function (dictGenericEncodeArgs) {
    return function (dictGenericEncodeArgs1) {
        return new GenericEncodeArgs(function (opts) {
            return function (v) {
                return Data_Semigroup.append(Data_List_Types.semigroupList)(encodeArgs(dictGenericEncodeArgs)(opts)(v.value0))(encodeArgs(dictGenericEncodeArgs1)(opts)(v.value1));
            };
        });
    };
};
var genericEncodeConstructor = function (dictIsSymbol) {
    return function (dictGenericEncodeArgs) {
        return new GenericEncode(function (opts) {
            return function (v) {
                var unwrapArguments = function (v1) {
                    if (v1.length === 0) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (v1.length === 1 && opts.unwrapSingleArguments) {
                        return new Data_Maybe.Just(v1[0]);
                    };
                    return new Data_Maybe.Just(Foreign.unsafeToForeign(v1));
                };
                var encodeArgsArray = (function () {
                    var $150 = Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);
                    var $151 = encodeArgs(dictGenericEncodeArgs)(opts);
                    return function ($152) {
                        return unwrapArguments($150($151($152)));
                    };
                })();
                var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                if (opts.unwrapSingleConstructors) {
                    return Data_Maybe.maybe(Foreign.unsafeToForeign({}))(Foreign.unsafeToForeign)(encodeArgsArray(v));
                };
                return Foreign.unsafeToForeign(Foreign_Object.union(Foreign_Object.singleton(opts.sumEncoding.value0.tagFieldName)(Foreign.unsafeToForeign(opts.sumEncoding.value0.constructorTagTransform(ctorName))))(Data_Maybe.maybe(Foreign_Object.empty)(Foreign_Object.singleton(opts.sumEncoding.value0.contentsFieldName))(encodeArgsArray(v))));
            };
        });
    };
};
var encode = function (dict) {
    return dict.encode;
};
var encodeWithOptionsOther = function (dictEncode) {
    return new EncodeWithOptions(function (v) {
        return encode(dictEncode);
    });
};
var identityEncode = function (dictEncode) {
    return new Encode((function () {
        var $153 = encode(dictEncode);
        var $154 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
        return function ($155) {
            return $153($154($155));
        };
    })());
};
var maybeEncode = function (dictEncode) {
    return new Encode(Data_Maybe.maybe(Foreign_NullOrUndefined["null"])(encode(dictEncode)));
};
var objectEncode = function (dictEncode) {
    return new Encode((function () {
        var $156 = Foreign_Object.mapWithKey(function (v) {
            return encode(dictEncode);
        });
        return function ($157) {
            return Foreign.unsafeToForeign($156($157));
        };
    })());
};
var defaultOptions = {
    sumEncoding: new TaggedObject({
        tagFieldName: "tag",
        contentsFieldName: "contents",
        constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
    }),
    unwrapSingleConstructors: false,
    unwrapSingleArguments: true,
    fieldTransform: Control_Category.identity(Control_Category.categoryFn)
};
var recordEncode = function (dictRowToList) {
    return function (dictEncodeRecord) {
        return new Encode(encodeWithOptions(encodeWithOptionsRecord()(dictEncodeRecord))(defaultOptions));
    };
};
var decodeWithOptions = function (dict) {
    return dict.decodeWithOptions;
};
var genericDecodeArgsArgument = function (dictDecodeWithOptions) {
    return new GenericDecodeArgs(function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Data_List_Types.Cons) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decodeWithOptions(dictDecodeWithOptions)(v)(v2.value0)))(function (a) {
                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                            result: a,
                            rest: v2.value1,
                            next: v1 + 1 | 0
                        });
                    });
                };
                return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
            };
        };
    });
};
var decodeRecordWithOptions = function (dict) {
    return dict.decodeRecordWithOptions;
};
var decodeWithOptionsRecord = function (dictRowToList) {
    return function (dictDecodeRecord) {
        return new DecodeWithOptions(function (opts) {
            return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
        });
    };
};
var recordDecode = function (dictRowToList) {
    return function (dictDecodeRecord) {
        return new Decode(decodeWithOptions(decodeWithOptionsRecord()(dictDecodeRecord))(defaultOptions));
    };
};
var decodeRecordNil = new DecodeRecord(function (v) {
    return function (v1) {
        return function (v2) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
        };
    };
});
var decodeRecordCons = function (dictCons) {
    return function (dictDecodeRecord) {
        return function (dictIsSymbol) {
            return function (dictDecodeWithOptions) {
                return function (dictLacks) {
                    return new DecodeRecord(function (v) {
                        return function (opts) {
                            return function (f) {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecordWithOptions(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (builder) {
                                    var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                    var l_transformed = opts.fieldTransform(l);
                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (f_) {
                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decodeWithOptions(dictDecodeWithOptions)(opts)(f_)))(function (a) {
                                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(builder)(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(a)));
                                        });
                                    });
                                });
                            };
                        };
                    });
                };
            };
        };
    };
};
var decodeOpts = function (dict) {
    return dict.decodeOpts;
};
var genericDecodeSum = function (dictGenericDecode) {
    return function (dictGenericDecode1) {
        return new GenericDecode(function (opts) {
            return function (f) {
                var opts$prime = {
                    unwrapSingleConstructors: false,
                    fieldTransform: opts.fieldTransform,
                    sumEncoding: opts.sumEncoding,
                    unwrapSingleArguments: opts.unwrapSingleArguments
                };
                return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inl.create)(decodeOpts(dictGenericDecode)(opts$prime)(f)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Inr.create)(decodeOpts(dictGenericDecode1)(opts$prime)(f)));
            };
        });
    };
};
var decodeArgs = function (dict) {
    return dict.decodeArgs;
};
var genericDecodeArgsProduct = function (dictGenericDecodeArgs) {
    return function (dictGenericDecodeArgs1) {
        return new GenericDecodeArgs(function (opts) {
            return function (i) {
                return function (xs) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(i)(xs))(function (v) {
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs1)(opts)(v.next)(v.rest))(function (v1) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                                result: new Data_Generic_Rep.Product(v.result, v1.result),
                                rest: v1.rest,
                                next: v1.next
                            });
                        });
                    });
                };
            };
        });
    };
};
var decode = function (dict) {
    return dict.decode;
};
var decodeWithOptionsOther = function (dictDecode) {
    return new DecodeWithOptions(function (v) {
        return decode(dictDecode);
    });
};
var identityDecode = function (dictDecode) {
    return new Decode((function () {
        var $158 = Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Identity.Identity);
        var $159 = decode(dictDecode);
        return function ($160) {
            return $158($159($160));
        };
    })());
};
var maybeDecode = function (dictDecode) {
    return new Decode(Foreign_NullOrUndefined.readNullOrUndefined(decode(dictDecode)));
};
var objectDecode = function (dictDecode) {
    return new Decode(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))((function () {
        var $161 = Data_Traversable.sequence(Foreign_Object.traversableObject)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity));
        var $162 = Foreign_Object.mapWithKey(function (v) {
            return decode(dictDecode);
        });
        return function ($163) {
            return $161($162($163));
        };
    })())(Foreign_Generic_Internal.readObject));
};
var countArgs = function (dict) {
    return dict.countArgs;
};
var genericCountArgsProduct = function (dictGenericCountArgs) {
    return function (dictGenericCountArgs1) {
        return new GenericCountArgs(function (v) {
            var v1 = countArgs(dictGenericCountArgs1)(Type_Proxy["Proxy"].value);
            var v2 = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
            if (v2 instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                return new Data_Either.Left(new Data_Generic_Rep.Product(v2.value0, v1.value0));
            };
            if (v2 instanceof Data_Either.Left && v1 instanceof Data_Either.Right) {
                return new Data_Either.Right(v1.value0);
            };
            if (v2 instanceof Data_Either.Right && v1 instanceof Data_Either.Left) {
                return new Data_Either.Right(v2.value0);
            };
            if (v2 instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                return new Data_Either.Right(v2.value0 + v1.value0 | 0);
            };
            throw new Error("Failed pattern match at Foreign.Generic.Class (line 400, column 5 - line 404, column 40): " + [ v2.constructor.name, v1.constructor.name ]);
        });
    };
};
var genericDecodeConstructor = function (dictIsSymbol) {
    return function (dictGenericDecodeArgs) {
        return function (dictGenericCountArgs) {
            return new GenericDecode(function (opts) {
                return function (f) {
                    var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);
                    var readArguments = function (args) {
                        if (numArgs instanceof Data_Either.Left) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
                        };
                        if (numArgs instanceof Data_Either.Right && (numArgs.value0 === 1 && opts.unwrapSingleArguments)) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                });
                            });
                        };
                        if (numArgs instanceof Data_Either.Right) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (vals) {
                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(vals)))(function (v) {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                                    });
                                });
                            });
                        };
                        throw new Error("Failed pattern match at Foreign.Generic.Class (line 307, column 9 - line 319, column 24): " + [ numArgs.constructor.name ]);
                    };
                    var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    if (opts.unwrapSingleConstructors) {
                        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
                    };
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (tag) {
                        var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(tag);
                        });
                    })))(function (tag) {
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (args) {
                            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(args);
                        });
                    });
                };
            });
        };
    };
};
var charEncode = new Encode(Foreign.unsafeToForeign);
var charDecode = new Decode(Foreign.readChar);
var booleanEncode = new Encode(Foreign.unsafeToForeign);
var booleanDecode = new Decode(Foreign.readBoolean);
var arrayEncode = function (dictEncode) {
    return new Encode((function () {
        var $164 = Data_Functor.map(Data_Functor.functorArray)(encode(dictEncode));
        return function ($165) {
            return Foreign.unsafeToForeign($164($165));
        };
    })());
};
var arrayDecode = function (dictDecode) {
    return new Decode((function () {
        var readElement = function (i) {
            return function (value) {
                return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
    })());
};
module.exports = {
    countArgs: countArgs,
    decode: decode,
    decodeArgs: decodeArgs,
    decodeOpts: decodeOpts,
    decodeRecordWithOptions: decodeRecordWithOptions,
    decodeWithOptions: decodeWithOptions,
    encode: encode,
    encodeArgs: encodeArgs,
    encodeOpts: encodeOpts,
    encodeRecordWithOptions: encodeRecordWithOptions,
    encodeWithOptions: encodeWithOptions,
    TaggedObject: TaggedObject,
    defaultOptions: defaultOptions,
    Decode: Decode,
    Encode: Encode,
    DecodeWithOptions: DecodeWithOptions,
    EncodeWithOptions: EncodeWithOptions,
    DecodeRecord: DecodeRecord,
    EncodeRecord: EncodeRecord,
    GenericDecode: GenericDecode,
    GenericEncode: GenericEncode,
    GenericDecodeArgs: GenericDecodeArgs,
    GenericEncodeArgs: GenericEncodeArgs,
    GenericCountArgs: GenericCountArgs,
    voidDecode: voidDecode,
    unitDecode: unitDecode,
    foreignDecode: foreignDecode,
    stringDecode: stringDecode,
    charDecode: charDecode,
    booleanDecode: booleanDecode,
    numberDecode: numberDecode,
    intDecode: intDecode,
    identityDecode: identityDecode,
    arrayDecode: arrayDecode,
    maybeDecode: maybeDecode,
    objectDecode: objectDecode,
    recordDecode: recordDecode,
    voidEncode: voidEncode,
    unitEncode: unitEncode,
    foreignEncode: foreignEncode,
    stringEncode: stringEncode,
    charEncode: charEncode,
    booleanEncode: booleanEncode,
    numberEncode: numberEncode,
    intEncode: intEncode,
    identityEncode: identityEncode,
    arrayEncode: arrayEncode,
    maybeEncode: maybeEncode,
    objectEncode: objectEncode,
    recordEncode: recordEncode,
    decodeWithOptionsRecord: decodeWithOptionsRecord,
    decodeWithOptionsOther: decodeWithOptionsOther,
    encodeWithOptionsRecord: encodeWithOptionsRecord,
    encodeWithOptionsOther: encodeWithOptionsOther,
    decodeRecordNil: decodeRecordNil,
    encodeRecordNil: encodeRecordNil,
    decodeRecordCons: decodeRecordCons,
    encodeRecordCons: encodeRecordCons,
    genericDecodeNoConstructors: genericDecodeNoConstructors,
    genericEncodeNoConstructors: genericEncodeNoConstructors,
    genericDecodeConstructor: genericDecodeConstructor,
    genericEncodeConstructor: genericEncodeConstructor,
    genericDecodeSum: genericDecodeSum,
    genericEncodeSum: genericEncodeSum,
    genericDecodeArgsNoArguments: genericDecodeArgsNoArguments,
    genericEncodeArgsNoArguments: genericEncodeArgsNoArguments,
    genericDecodeArgsArgument: genericDecodeArgsArgument,
    genericEncodeArgsArgument: genericEncodeArgsArgument,
    genericDecodeArgsProduct: genericDecodeArgsProduct,
    genericEncodeArgsProduct: genericEncodeArgsProduct,
    genericCountArgsNoArguments: genericCountArgsNoArguments,
    genericCountArgsArgument: genericCountArgsArgument,
    genericCountArgsProduct: genericCountArgsProduct
};
