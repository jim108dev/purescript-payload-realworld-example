// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Foreign = require("../Foreign/index.js");
var Node_FS_Aff = require("../Node.FS.Aff/index.js");
var Node_FS_Stats = require("../Node.FS.Stats/index.js");
var Node_FS_Stream = require("../Node.FS.Stream/index.js");
var Payload_Headers = require("../Payload.Headers/index.js");
var Payload_ResponseTypes = require("../Payload.ResponseTypes/index.js");
var Payload_Server_Internal_MimeTypes = require("../Payload.Server.Internal.MimeTypes/index.js");
var Payload_Server_Path = require("../Payload.Server.Path/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Payload_Server_Status = require("../Payload.Server.Status/index.js");
var Simple_JSON = require("../Simple.JSON/index.js");
var File = (function () {
    function File(value0) {
        this.value0 = value0;
    };
    File.create = function (value0) {
        return new File(value0);
    };
    return File;
})();
var readForeignFile = new Simple_JSON.ReadForeign(function (f) {
    return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(File.create)(Foreign.readString(f));
});
var notFoundError = new Payload_ResponseTypes["Error"](Payload_Server_Response.notFound(new Payload_ResponseTypes.StringBody("File not found")));
var fileSize = function (v) {
    return Data_Int.round(v.value0.size);
};
var file = function (path) {
    return function (v) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(new File(path));
    };
};
var encodeResponseFile = new Payload_Server_Response.EncodeResponse(function (v) {
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(Node_FS_Aff.exists(v.body.value0)))(function (exists) {
        var $7 = !exists;
        if ($7) {
            return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(notFoundError);
        };
        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(Node_FS_Aff.stat(v.body.value0)))(function (stat) {
            var $8 = Node_FS_Stats.isFile(stat);
            if ($8) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_FS_Stream.createReadStream(v.body.value0))))(function (fileStream) {
                    var mimeType = Data_Maybe.fromMaybe("text/plain")(Payload_Server_Internal_MimeTypes.pathToMimeType(v.body.value0));
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))({
                        status: Payload_Server_Status.ok,
                        headers: Payload_Headers.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("Content-Type", mimeType), new Data_Tuple.Tuple("Content-Length", Data_Show.show(Data_Show.showInt)(fileSize(stat))) ]),
                        body: new Payload_ResponseTypes.StreamBody(fileStream)
                    });
                });
            };
            return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(notFoundError);
        });
    });
});
var directory = function (dictFoldable) {
    return function (root) {
        return function (path) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Server_Path.resolve([ root ])))(function (rootPath) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Server_Path.resolve(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ root ])(Data_Array.fromFoldable(dictFoldable)(path)))))(function (requestedPath) {
                    var $11 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String_CodePoints.indexOf(rootPath)(requestedPath))(new Data_Maybe.Just(0));
                    if ($11) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Either.Right.create(new File(requestedPath)));
                    };
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(notFoundError));
                });
            });
        };
    };
};
module.exports = {
    File: File,
    directory: directory,
    file: file,
    encodeResponseFile: encodeResponseFile,
    readForeignFile: readForeignFile
};
