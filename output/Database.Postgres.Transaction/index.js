// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Database_Postgres = require("../Database.Postgres/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var rollback = Database_Postgres.execute_("ROLLBACK");
var commit = Database_Postgres.execute_("COMMIT");
var begin = Database_Postgres.execute_("BEGIN TRANSACTION");
var withTransaction = function (act) {
    return function (client) {
        var rollback_ = function (err) {
            return Control_Apply.applySecond(Effect_Aff.applyAff)(rollback(client))(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(err));
        };
        var commit_ = function (v) {
            return Control_Apply.applySecond(Effect_Aff.applyAff)(commit(client))(Control_Applicative.pure(Effect_Aff.applicativeAff)(v));
        };
        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(begin(client))(function () {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff.attempt(act(client)))(function (res) {
                return Data_Either.either(rollback_)(commit_)(res);
            });
        });
    };
};
module.exports = {
    withTransaction: withTransaction,
    begin: begin,
    commit: commit,
    rollback: rollback
};
