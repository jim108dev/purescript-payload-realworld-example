// Generated by purs version 0.13.8
"use strict";
var MutableBuffer = function (Monad0, concat, concat$prime, copy, create, fill, freeze, fromArray, fromArrayBuffer, fromString, getAtOffset, read, readString, setAtOffset, size, slice, thaw, toArray, toArrayBuffer, toString, unsafeFreeze, unsafeThaw, write, writeString) {
    this.Monad0 = Monad0;
    this.concat = concat;
    this["concat'"] = concat$prime;
    this.copy = copy;
    this.create = create;
    this.fill = fill;
    this.freeze = freeze;
    this.fromArray = fromArray;
    this.fromArrayBuffer = fromArrayBuffer;
    this.fromString = fromString;
    this.getAtOffset = getAtOffset;
    this.read = read;
    this.readString = readString;
    this.setAtOffset = setAtOffset;
    this.size = size;
    this.slice = slice;
    this.thaw = thaw;
    this.toArray = toArray;
    this.toArrayBuffer = toArrayBuffer;
    this.toString = toString;
    this.unsafeFreeze = unsafeFreeze;
    this.unsafeThaw = unsafeThaw;
    this.write = write;
    this.writeString = writeString;
};
var writeString = function (dict) {
    return dict.writeString;
};
var write = function (dict) {
    return dict.write;
};
var unsafeThaw = function (dict) {
    return dict.unsafeThaw;
};
var unsafeFreeze = function (dict) {
    return dict.unsafeFreeze;
};
var toString = function (dict) {
    return dict.toString;
};
var toArrayBuffer = function (dict) {
    return dict.toArrayBuffer;
};
var toArray = function (dict) {
    return dict.toArray;
};
var thaw = function (dict) {
    return dict.thaw;
};
var slice = function (dict) {
    return dict.slice;
};
var size = function (dict) {
    return dict.size;
};
var setAtOffset = function (dict) {
    return dict.setAtOffset;
};
var readString = function (dict) {
    return dict.readString;
};
var read = function (dict) {
    return dict.read;
};
var getAtOffset = function (dict) {
    return dict.getAtOffset;
};
var fromString = function (dict) {
    return dict.fromString;
};
var fromArrayBuffer = function (dict) {
    return dict.fromArrayBuffer;
};
var fromArray = function (dict) {
    return dict.fromArray;
};
var freeze = function (dict) {
    return dict.freeze;
};
var fill = function (dict) {
    return dict.fill;
};
var create = function (dict) {
    return dict.create;
};
var copy = function (dict) {
    return dict.copy;
};
var concat$prime = function (dict) {
    return dict["concat'"];
};
var concat = function (dict) {
    return dict.concat;
};
module.exports = {
    MutableBuffer: MutableBuffer,
    create: create,
    freeze: freeze,
    unsafeFreeze: unsafeFreeze,
    thaw: thaw,
    unsafeThaw: unsafeThaw,
    fromArray: fromArray,
    fromString: fromString,
    fromArrayBuffer: fromArrayBuffer,
    toArrayBuffer: toArrayBuffer,
    read: read,
    readString: readString,
    toString: toString,
    write: write,
    writeString: writeString,
    toArray: toArray,
    getAtOffset: getAtOffset,
    setAtOffset: setAtOffset,
    slice: slice,
    size: size,
    concat: concat,
    "concat'": concat$prime,
    copy: copy,
    fill: fill
};
