// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Node_Encoding = require("../Node.Encoding/index.js");
var Node_HTTP = require("../Node.HTTP/index.js");
var Node_Stream = require("../Node.Stream/index.js");
var Payload_Internal_Route = require("../Payload.Internal.Route/index.js");
var Payload_ResponseTypes = require("../Payload.ResponseTypes/index.js");
var Payload_Server_DecodeBody = require("../Payload.Server.DecodeBody/index.js");
var Payload_Server_Guards = require("../Payload.Server.Guards/index.js");
var Payload_Server_Internal_GuardParsing = require("../Payload.Server.Internal.GuardParsing/index.js");
var Payload_Server_Internal_OmitEmpty = require("../Payload.Server.Internal.OmitEmpty/index.js");
var Payload_Server_Internal_Query = require("../Payload.Server.Internal.Query/index.js");
var Payload_Server_Internal_Url = require("../Payload.Server.Internal.Url/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Payload_Spec = require("../Payload.Spec/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var Type_Proxy = require("../Type.Proxy/index.js");
var Handleable = function (handle) {
    this.handle = handle;
};
var DecodeOptionalBody = function (decodeOptionalBody) {
    this.decodeOptionalBody = decodeOptionalBody;
};
var readBody_ = function (req) {
    return function (cb) {
        var returnError = function (msg) {
            return cb(Data_Either.Left.create(msg));
        };
        var returnBody = function (val) {
            return cb(Data_Either.Right.create(val));
        };
        return function __do() {
            var buffer = Effect_Ref["new"]("")();
            var inputStream = Node_HTTP.requestAsStream(req);
            var handleData = function (str) {
                return Data_Function.flip(Effect_Ref.modify_)(buffer)(function (v) {
                    return v + str;
                });
            };
            var handleEnd = Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(buffer))(returnBody);
            Effect_Exception.catchException(returnError)(function __do() {
                Node_Stream.onError(inputStream)(returnError)();
                Node_Stream.onDataString(inputStream)(Node_Encoding.UTF8.value)(handleData)();
                return Node_Stream.onEnd(inputStream)(handleEnd)();
            })();
            return Data_Monoid.mempty(Effect_Aff.monoidCanceler);
        };
    };
};
var readBody = function (req) {
    return Effect_Aff.makeAff(readBody_(req));
};
var mkResponse = function (dictToSpecResponse) {
    return function (dictEncodeResponse) {
        return function (v) {
            return function (v1) {
                return function (aff) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(aff))(function (v2) {
                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Response.toSpecResponse(dictToSpecResponse)(Data_Symbol.SProxy.value)(v2))(function (v3) {
                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Response.encodeResponse(dictEncodeResponse)(v3))(function (v4) {
                                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(v4);
                            });
                        });
                    });
                };
            };
        };
    };
};
var handleableOptionsRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictToSpecResponse) {
                return function (dictEncodeResponse) {
                    return function (dictAppend1) {
                        return function (dictUnion) {
                            return function (dictDecodeUrl) {
                                return function (dictDecodeQuery) {
                                    return function (dictParseUrl) {
                                        return function (dictToSegments) {
                                            return function (dictTypeEquals1) {
                                                return function (dictOmitEmpty) {
                                                    return function (dictAppend2) {
                                                        return function (dictRunGuards) {
                                                            return new Handleable(function (v) {
                                                                return function (v1) {
                                                                    return function (v2) {
                                                                        return function (v3) {
                                                                            return function (route) {
                                                                                return function (handler) {
                                                                                    return function (allGuards) {
                                                                                        return function (v4) {
                                                                                            return function (req) {
                                                                                                return function (res) {
                                                                                                    var unprocessableEntity = function (v5) {
                                                                                                        return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(Payload_ResponseTypes.EmptyBody.value));
                                                                                                    };
                                                                                                    var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                    params: params,
                                                                                                                    query: decodedQuery,
                                                                                                                    guards: guards
                                                                                                                });
                                                                                                                return mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5)));
                                                                                                            });
                                                                                                        });
                                                                                                    });
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            });
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handleableHeadRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictAppend1) {
                return function (dictToSpecResponse) {
                    return function (dictEncodeResponse) {
                        return function (dictUnion) {
                            return function (dictDecodeUrl) {
                                return function (dictDecodeQuery) {
                                    return function (dictParseUrl) {
                                        return function (dictToSegments) {
                                            return function (dictTypeEquals1) {
                                                return function (dictOmitEmpty) {
                                                    return function (dictAppend2) {
                                                        return function (dictRunGuards) {
                                                            return new Handleable(function (v) {
                                                                return function (v1) {
                                                                    return function (v2) {
                                                                        return function (v3) {
                                                                            return function (route) {
                                                                                return function (handler) {
                                                                                    return function (allGuards) {
                                                                                        return function (v4) {
                                                                                            return function (req) {
                                                                                                return function (res) {
                                                                                                    var unprocessableEntity = function (s) {
                                                                                                        return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(new Payload_ResponseTypes.StringBody(s)));
                                                                                                    };
                                                                                                    var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                    params: params,
                                                                                                                    query: decodedQuery,
                                                                                                                    guards: guards
                                                                                                                });
                                                                                                                return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Effect_Aff.functorAff))(Payload_Server_Response.setBody(Payload_ResponseTypes.EmptyBody.value))(mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5))));
                                                                                                            });
                                                                                                        });
                                                                                                    });
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            });
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handleableGetRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictToSpecResponse) {
                return function (dictEncodeResponse) {
                    return function (dictAppend1) {
                        return function (dictUnion) {
                            return function (dictDecodeUrl) {
                                return function (dictDecodeQuery) {
                                    return function (dictParseUrl) {
                                        return function (dictToSegments) {
                                            return function (dictTypeEquals1) {
                                                return function (dictOmitEmpty) {
                                                    return function (dictAppend2) {
                                                        return function (dictRunGuards) {
                                                            return new Handleable(function (v) {
                                                                return function (v1) {
                                                                    return function (v2) {
                                                                        return function (v3) {
                                                                            return function (route) {
                                                                                return function (handler) {
                                                                                    return function (allGuards) {
                                                                                        return function (v4) {
                                                                                            return function (req) {
                                                                                                return function (res) {
                                                                                                    var unprocessableEntity = function (s) {
                                                                                                        return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(new Payload_ResponseTypes.StringBody(s)));
                                                                                                    };
                                                                                                    var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                    params: params,
                                                                                                                    query: decodedQuery,
                                                                                                                    guards: guards
                                                                                                                });
                                                                                                                return mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5)));
                                                                                                            });
                                                                                                        });
                                                                                                    });
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            });
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handle = function (dict) {
    return dict.handle;
};
var encodeOptionalBodyDefined = function (dictDecodeBody) {
    return new DecodeOptionalBody(function (body) {
        return Payload_Server_DecodeBody.decodeBody(dictDecodeBody)(body);
    });
};
var decodeOptionalBodyUndefined = new DecodeOptionalBody(function (v) {
    return new Data_Either.Right(Payload_Internal_Route.Undefined.value);
});
var decodeOptionalBody = function (dict) {
    return dict.decodeOptionalBody;
};
var handleableDeleteRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictToSpecResponse) {
                return function (dictEncodeResponse) {
                    return function (dictAppend1) {
                        return function (dictDecodeOptionalBody) {
                            return function (dictUnion) {
                                return function (dictDecodeUrl) {
                                    return function (dictDecodeQuery) {
                                        return function (dictParseUrl) {
                                            return function (dictToSegments) {
                                                return function (dictTypeEquals1) {
                                                    return function (dictOmitEmpty) {
                                                        return function (dictAppend2) {
                                                            return function (dictRunGuards) {
                                                                return new Handleable(function (v) {
                                                                    return function (v1) {
                                                                        return function (v2) {
                                                                            return function (v3) {
                                                                                return function (route) {
                                                                                    return function (handler) {
                                                                                        return function (allGuards) {
                                                                                            return function (v4) {
                                                                                                return function (req) {
                                                                                                    return function (res) {
                                                                                                        var unprocessableEntity = function (s) {
                                                                                                            return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(new Payload_ResponseTypes.StringBody(s)));
                                                                                                        };
                                                                                                        var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(readBody(req)))(function (bodyStr) {
                                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeOptionalBody(dictDecodeOptionalBody)(bodyStr))))(function (body) {
                                                                                                                            var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                                params: params,
                                                                                                                                body: body,
                                                                                                                                query: decodedQuery,
                                                                                                                                guards: guards
                                                                                                                            });
                                                                                                                            return mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5)));
                                                                                                                        });
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        });
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                });
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handleablePostRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictToSpecResponse) {
                return function (dictEncodeResponse) {
                    return function (dictAppend1) {
                        return function (dictDecodeOptionalBody) {
                            return function (dictUnion) {
                                return function (dictDecodeUrl) {
                                    return function (dictDecodeQuery) {
                                        return function (dictParseUrl) {
                                            return function (dictToSegments) {
                                                return function (dictTypeEquals1) {
                                                    return function (dictOmitEmpty) {
                                                        return function (dictAppend2) {
                                                            return function (dictRunGuards) {
                                                                return new Handleable(function (v) {
                                                                    return function (v1) {
                                                                        return function (v2) {
                                                                            return function (v3) {
                                                                                return function (route) {
                                                                                    return function (handler) {
                                                                                        return function (allGuards) {
                                                                                            return function (v4) {
                                                                                                return function (req) {
                                                                                                    return function (res) {
                                                                                                        var unprocessableEntity = function (s) {
                                                                                                            return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(new Payload_ResponseTypes.StringBody(s)));
                                                                                                        };
                                                                                                        var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(readBody(req)))(function (bodyStr) {
                                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeOptionalBody(dictDecodeOptionalBody)(bodyStr))))(function (body) {
                                                                                                                            var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                                params: params,
                                                                                                                                body: body,
                                                                                                                                query: decodedQuery,
                                                                                                                                guards: guards
                                                                                                                            });
                                                                                                                            return mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5)));
                                                                                                                        });
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        });
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                });
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handleablePutRoute = function (dictTypeEquals) {
    return function (dictIsSymbol) {
        return function (dictAppend) {
            return function (dictToSpecResponse) {
                return function (dictEncodeResponse) {
                    return function (dictAppend1) {
                        return function (dictDecodeOptionalBody) {
                            return function (dictUnion) {
                                return function (dictDecodeUrl) {
                                    return function (dictDecodeQuery) {
                                        return function (dictParseUrl) {
                                            return function (dictToSegments) {
                                                return function (dictTypeEquals1) {
                                                    return function (dictOmitEmpty) {
                                                        return function (dictAppend2) {
                                                            return function (dictRunGuards) {
                                                                return new Handleable(function (v) {
                                                                    return function (v1) {
                                                                        return function (v2) {
                                                                            return function (v3) {
                                                                                return function (route) {
                                                                                    return function (handler) {
                                                                                        return function (allGuards) {
                                                                                            return function (v4) {
                                                                                                return function (req) {
                                                                                                    return function (res) {
                                                                                                        var unprocessableEntity = function (s) {
                                                                                                            return Payload_ResponseTypes["Error"].create(Payload_Server_Response.unprocessableEntity(new Payload_ResponseTypes.StringBody(s)));
                                                                                                        };
                                                                                                        var decodeQuery = Payload_Server_Internal_Query.decodeQuery(dictDecodeQuery)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        var decodePath = Payload_Server_Internal_Url.decodeUrl(dictDecodeUrl)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value);
                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Guards.runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)({})(req))(function (guards) {
                                                                                                            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(Payload_ResponseTypes.Forward.create)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodePath(v4.path))))(function (params) {
                                                                                                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeQuery(v4.query))))(function (decodedQuery) {
                                                                                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(readBody(req)))(function (bodyStr) {
                                                                                                                        return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Except_Trans.withExceptT(Effect_Aff.functorAff)(unprocessableEntity)(Control_Monad_Except_Trans.except(Effect_Aff.applicativeAff)(decodeOptionalBody(dictDecodeOptionalBody)(bodyStr))))(function (body) {
                                                                                                                            var v5 = Type_Equality.to(dictTypeEquals1)({
                                                                                                                                params: params,
                                                                                                                                body: body,
                                                                                                                                query: decodedQuery,
                                                                                                                                guards: guards
                                                                                                                            });
                                                                                                                            return mkResponse(dictToSpecResponse)(dictEncodeResponse)(Data_Symbol.SProxy.value)(Type_Proxy["Proxy"].value)(handler(Payload_Server_Internal_OmitEmpty.omitEmpty(dictOmitEmpty)(v5)));
                                                                                                                        });
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        });
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                });
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    Handleable: Handleable,
    handle: handle,
    DecodeOptionalBody: DecodeOptionalBody,
    decodeOptionalBody: decodeOptionalBody,
    handleablePostRoute: handleablePostRoute,
    handleableGetRoute: handleableGetRoute,
    handleableHeadRoute: handleableHeadRoute,
    handleablePutRoute: handleablePutRoute,
    handleableDeleteRoute: handleableDeleteRoute,
    handleableOptionsRoute: handleableOptionsRoute,
    decodeOptionalBodyUndefined: decodeOptionalBodyUndefined,
    encodeOptionalBodyDefined: encodeOptionalBodyDefined
};
