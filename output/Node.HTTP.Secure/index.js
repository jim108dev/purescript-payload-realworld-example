// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Data_Options = require("../Data.Options/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var ticketKeys = Data_Options.opt("ticketKeys");
var sessionTimeout = Data_Options.opt("sessionTimeout");
var sessionIdContext = Data_Options.opt("sessionIdContext");
var secureProtocol = Data_Options.opt("secureProtocol");
var secureOptions = Data_Options.opt("secureOptions");
var requestCert = Data_Options.opt("requestCert");
var rejectUnauthorized = Data_Options.opt("rejectUnauthorized");
var pfxString = Unsafe_Coerce.unsafeCoerce;
var pfxBuffer = Unsafe_Coerce.unsafeCoerce;
var pfx = Data_Options.opt("pfx");
var passphrase = Data_Options.opt("passphrase");
var npnProtocolsUint8ArrayArray = Unsafe_Coerce.unsafeCoerce;
var npnProtocolsUint8Array = Unsafe_Coerce.unsafeCoerce;
var npnProtocolsStringArray = Unsafe_Coerce.unsafeCoerce;
var npnProtocolsString = Unsafe_Coerce.unsafeCoerce;
var npnProtocolsBufferArray = Unsafe_Coerce.unsafeCoerce;
var npnProtocolsBuffer = Unsafe_Coerce.unsafeCoerce;
var npnProtocols = Data_Options.opt("NPNProtocols");
var keyStringArray = Unsafe_Coerce.unsafeCoerce;
var keyString = Unsafe_Coerce.unsafeCoerce;
var keyBufferArray = Unsafe_Coerce.unsafeCoerce;
var keyBuffer = Unsafe_Coerce.unsafeCoerce;
var key = Data_Options.opt("key");
var honorCipherOrder = Data_Options.opt("honorCipherOrder");
var handshakeTimeout = Data_Options.opt("handshakeTimeout");
var ecdhCurve = Data_Options.opt("ecdhCurve");
var dhparamString = Unsafe_Coerce.unsafeCoerce;
var dhparamBuffer = Unsafe_Coerce.unsafeCoerce;
var dhparam = Data_Options.opt("dhparam");
var crlStringArray = Unsafe_Coerce.unsafeCoerce;
var crlString = Unsafe_Coerce.unsafeCoerce;
var crlBufferArray = Unsafe_Coerce.unsafeCoerce;
var crlBuffer = Unsafe_Coerce.unsafeCoerce;
var crl = Data_Options.opt("crl");
var createServer = function ($0) {
    return $foreign.createServerImpl(Data_Options.options($0));
};
var ciphers = Data_Options.opt("ciphers");
var certStringArray = Unsafe_Coerce.unsafeCoerce;
var certString = Unsafe_Coerce.unsafeCoerce;
var certBufferArray = Unsafe_Coerce.unsafeCoerce;
var certBuffer = Unsafe_Coerce.unsafeCoerce;
var cert = Data_Options.opt("cert");
var caStringArray = Unsafe_Coerce.unsafeCoerce;
var caString = Unsafe_Coerce.unsafeCoerce;
var caBufferArray = Unsafe_Coerce.unsafeCoerce;
var caBuffer = Unsafe_Coerce.unsafeCoerce;
var ca = Data_Options.opt("ca");
var alpnProtocolsUint8ArrayArray = Unsafe_Coerce.unsafeCoerce;
var alpnProtocolsUint8Array = Unsafe_Coerce.unsafeCoerce;
var alpnProtocolsStringArray = Unsafe_Coerce.unsafeCoerce;
var alpnProtocolsString = Unsafe_Coerce.unsafeCoerce;
var alpnProtocolsBufferArray = Unsafe_Coerce.unsafeCoerce;
var alpnProtocolsBuffer = Unsafe_Coerce.unsafeCoerce;
var alpnProtocols = Data_Options.opt("ALPNProtocols");
module.exports = {
    createServer: createServer,
    handshakeTimeout: handshakeTimeout,
    requestCert: requestCert,
    rejectUnauthorized: rejectUnauthorized,
    npnProtocolsString: npnProtocolsString,
    npnProtocolsBuffer: npnProtocolsBuffer,
    npnProtocolsUint8Array: npnProtocolsUint8Array,
    npnProtocolsStringArray: npnProtocolsStringArray,
    npnProtocolsBufferArray: npnProtocolsBufferArray,
    npnProtocolsUint8ArrayArray: npnProtocolsUint8ArrayArray,
    npnProtocols: npnProtocols,
    alpnProtocolsString: alpnProtocolsString,
    alpnProtocolsBuffer: alpnProtocolsBuffer,
    alpnProtocolsUint8Array: alpnProtocolsUint8Array,
    alpnProtocolsStringArray: alpnProtocolsStringArray,
    alpnProtocolsBufferArray: alpnProtocolsBufferArray,
    alpnProtocolsUint8ArrayArray: alpnProtocolsUint8ArrayArray,
    alpnProtocols: alpnProtocols,
    sessionTimeout: sessionTimeout,
    ticketKeys: ticketKeys,
    pfxString: pfxString,
    pfxBuffer: pfxBuffer,
    pfx: pfx,
    keyString: keyString,
    keyBuffer: keyBuffer,
    keyStringArray: keyStringArray,
    keyBufferArray: keyBufferArray,
    key: key,
    passphrase: passphrase,
    certString: certString,
    certBuffer: certBuffer,
    certStringArray: certStringArray,
    certBufferArray: certBufferArray,
    cert: cert,
    caString: caString,
    caBuffer: caBuffer,
    caStringArray: caStringArray,
    caBufferArray: caBufferArray,
    ca: ca,
    crlString: crlString,
    crlBuffer: crlBuffer,
    crlStringArray: crlStringArray,
    crlBufferArray: crlBufferArray,
    crl: crl,
    ciphers: ciphers,
    honorCipherOrder: honorCipherOrder,
    ecdhCurve: ecdhCurve,
    dhparamString: dhparamString,
    dhparamBuffer: dhparamBuffer,
    dhparam: dhparam,
    secureProtocol: secureProtocol,
    secureOptions: secureOptions,
    sessionIdContext: sessionIdContext
};
