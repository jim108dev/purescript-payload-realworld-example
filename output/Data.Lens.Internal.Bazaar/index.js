// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Bazaar = function (x) {
    return x;
};
var runBazaar = function (v) {
    return function (dictApplicative) {
        return v(dictApplicative);
    };
};
var profunctorBazaar = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
        return function (v) {
            return function (dictApplicative) {
                return function (pafb) {
                    return function (s) {
                        return Data_Functor.map((dictApplicative.Apply0()).Functor0())(g)(v(dictApplicative)(pafb)(f(s)));
                    };
                };
            };
        };
    };
});
var strongBazaar = new Data_Profunctor_Strong.Strong(function () {
    return profunctorBazaar;
}, function (v) {
    return function (dictApplicative) {
        return function (pafb) {
            return function (v1) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Function.flip(Data_Tuple.Tuple.create)(v1.value1))(v(dictApplicative)(pafb)(v1.value0));
            };
        };
    };
}, function (v) {
    return function (dictApplicative) {
        return function (pafb) {
            return function (v1) {
                return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Tuple.Tuple.create(v1.value0))(v(dictApplicative)(pafb)(v1.value1));
            };
        };
    };
});
var choiceBazaar = new Data_Profunctor_Choice.Choice(function () {
    return profunctorBazaar;
}, function (v) {
    return function (dictApplicative) {
        return function (pafb) {
            return function (e) {
                return Data_Bitraversable.bitraverse(Data_Either.bitraversableEither)(dictApplicative)(v(dictApplicative)(pafb))(Control_Applicative.pure(dictApplicative))(e);
            };
        };
    };
}, function (v) {
    return function (dictApplicative) {
        return function (pafb) {
            return function (e) {
                return Data_Traversable.traverse(Data_Either.traversableEither)(dictApplicative)(v(dictApplicative)(pafb))(e);
            };
        };
    };
});
var wanderBazaar = new Data_Lens_Internal_Wander.Wander(function () {
    return choiceBazaar;
}, function () {
    return strongBazaar;
}, function (w) {
    return function (v) {
        return function (dictApplicative) {
            return function (pafb) {
                return function (s) {
                    return w(dictApplicative)(v(dictApplicative)(pafb))(s);
                };
            };
        };
    };
});
module.exports = {
    Bazaar: Bazaar,
    runBazaar: runBazaar,
    profunctorBazaar: profunctorBazaar,
    strongBazaar: strongBazaar,
    choiceBazaar: choiceBazaar,
    wanderBazaar: wanderBazaar
};
