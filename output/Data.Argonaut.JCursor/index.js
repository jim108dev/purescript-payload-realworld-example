// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var JsonPrim = function (x) {
    return x;
};
var JCursorTop = (function () {
    function JCursorTop() {

    };
    JCursorTop.value = new JCursorTop();
    return JCursorTop;
})();
var JField = (function () {
    function JField(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JField.create = function (value0) {
        return function (value1) {
            return new JField(value0, value1);
        };
    };
    return JField;
})();
var JIndex = (function () {
    function JIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    JIndex.create = function (value0) {
        return function (value1) {
            return new JIndex(value0, value1);
        };
    };
    return JIndex;
})();
var showJCursor = new Data_Show.Show(function (v) {
    if (v instanceof JCursorTop) {
        return "JCursorTop";
    };
    if (v instanceof JField) {
        return "(JField " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showJCursor)(v.value1) + ")")));
    };
    if (v instanceof JIndex) {
        return "(JIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showJCursor)(v.value1) + ")")));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 26, column 1 - line 29, column 67): " + [ v.constructor.name ]);
});
var semigroupJCursor = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof JCursorTop) {
            return v;
        };
        if (v instanceof JCursorTop) {
            return v1;
        };
        if (v instanceof JField) {
            return new JField(v.value0, Data_Semigroup.append(semigroupJCursor)(v.value1)(v1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, Data_Semigroup.append(semigroupJCursor)(v.value1)(v1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 36, column 1 - line 40, column 44): " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var runJsonPrim = function (v) {
    return v;
};
var showJsonPrim = new Data_Show.Show(function (p) {
    return runJsonPrim(p)(Data_Show.show(Data_Unit.showUnit))(Data_Show.show(Data_Show.showBoolean))(Data_Show.show(Data_Show.showNumber))(Data_Show.show(Data_Show.showString));
});
var print = function (v) {
    if (v instanceof JCursorTop) {
        return "";
    };
    if (v instanceof JField) {
        return "." + (v.value0 + Data_Show.show(showJCursor)(v.value1));
    };
    if (v instanceof JIndex) {
        return "[" + (Data_Show.show(Data_Show.showInt)(v.value0) + ("]" + Data_Show.show(showJCursor)(v.value1)));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 31, column 1 - line 31, column 27): " + [ v.constructor.name ]);
};
var primToJson = function (p) {
    return runJsonPrim(p)(Data_Function["const"](Data_Argonaut_Core.jsonNull))(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
};
var primStr = function (v) {
    return function (v1) {
        return function (v2) {
            return function (v3) {
                return function (f) {
                    return f(v);
                };
            };
        };
    };
};
var primNum = function (v) {
    return function (v1) {
        return function (v2) {
            return function (f) {
                return function (v3) {
                    return f(v);
                };
            };
        };
    };
};
var primNull = function (f) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                return f(Data_Unit.unit);
            };
        };
    };
};
var primBool = function (v) {
    return function (v1) {
        return function (f) {
            return function (v2) {
                return function (v3) {
                    return f(v);
                };
            };
        };
    };
};
var toPrims = (function () {
    var objFn = function (obj) {
        var f = function (v) {
            return Data_Functor.map(Data_List_Types.functorList)(function (t) {
                return new Data_Tuple.Tuple(new JField(v.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(v.value1));
        };
        return Control_Bind.bind(Data_List_Types.bindList)(Foreign_Object.toUnfoldable(Data_List_Types.unfoldableList)(obj))(f);
    };
    var mkTop = function (p) {
        return Data_List.singleton(new Data_Tuple.Tuple(JCursorTop.value, p));
    };
    var nullFn = function (v) {
        return mkTop(primNull);
    };
    var numFn = function (n) {
        return mkTop(primNum(n));
    };
    var strFn = function (s) {
        return mkTop(primStr(s));
    };
    var boolFn = function (b) {
        return mkTop(primBool(b));
    };
    var arrFn$prime = function (v) {
        return Data_List.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function (t) {
            return new Data_Tuple.Tuple(new JIndex(v.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
        })(toPrims(v.value1)));
    };
    var arrFn = function (arr) {
        var zipped = Data_List.zipWith(Data_Tuple.Tuple.create)(Data_List.range(0)(Data_Array.length(arr) - 1 | 0))(Data_List.fromFoldable(Data_Foldable.foldableArray)(arr));
        return Control_Bind.bind(Data_List_Types.bindList)(zipped)(arrFn$prime);
    };
    return Data_Argonaut_Core.caseJson(nullFn)(boolFn)(numFn)(strFn)(arrFn)(objFn);
})();
var monoidJCursor = new Data_Monoid.Monoid(function () {
    return semigroupJCursor;
}, JCursorTop.value);
var inferEmpty = function (v) {
    if (v instanceof JCursorTop) {
        return Data_Argonaut_Core.jsonNull;
    };
    if (v instanceof JField) {
        return Data_Argonaut_Core.jsonEmptyObject;
    };
    if (v instanceof JIndex) {
        return Data_Argonaut_Core.jsonEmptyArray;
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 109, column 1 - line 109, column 32): " + [ v.constructor.name ]);
};
var eqJCursor = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof JCursorTop && y instanceof JCursorTop) {
            return true;
        };
        if (x instanceof JField && y instanceof JField) {
            return x.value0 === y.value0 && Data_Eq.eq(eqJCursor)(x.value1)(y.value1);
        };
        if (x instanceof JIndex && y instanceof JIndex) {
            return x.value0 === y.value0 && Data_Eq.eq(eqJCursor)(x.value1)(y.value1);
        };
        return false;
    };
});
var ordJCursor = new Data_Ord.Ord(function () {
    return eqJCursor;
}, function (x) {
    return function (y) {
        if (x instanceof JCursorTop && y instanceof JCursorTop) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof JCursorTop) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof JCursorTop) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JField && y instanceof JField) {
            var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordJCursor)(x.value1)(y.value1);
        };
        if (x instanceof JField) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof JField) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof JIndex && y instanceof JIndex) {
            var v = Data_Ord.compare(Data_Ord.ordInt)(x.value0)(y.value0);
            if (v instanceof Data_Ordering.LT) {
                return Data_Ordering.LT.value;
            };
            if (v instanceof Data_Ordering.GT) {
                return Data_Ordering.GT.value;
            };
            return Data_Ord.compare(ordJCursor)(x.value1)(y.value1);
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 24, column 1 - line 24, column 42): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var encodeJsonJCursor = new Data_Argonaut_Encode_Class.EncodeJson((function () {
    var loop = function (v) {
        if (v instanceof JCursorTop) {
            return [  ];
        };
        if (v instanceof JField) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0) ])(loop(v.value1));
        };
        if (v instanceof JIndex) {
            return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(v.value0) ])(loop(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 47, column 5 - line 47, column 25): " + [ v.constructor.name ]);
    };
    var $148 = Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJson));
    return function ($149) {
        return $148(loop($149));
    };
})());
var downIndex = function (i) {
    var downIndex$prime = function (v) {
        if (v instanceof JCursorTop) {
            return new JIndex(i, JCursorTop.value);
        };
        if (v instanceof JField) {
            return new JField(v.value0, downIndex$prime(v.value1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, downIndex$prime(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 100, column 3 - line 100, column 46): " + [ v.constructor.name ]);
    };
    return downIndex$prime;
};
var downField = function (i) {
    var downField$prime = function (v) {
        if (v instanceof JCursorTop) {
            return new JField(i, JCursorTop.value);
        };
        if (v instanceof JField) {
            return new JField(v.value0, downField$prime(v.value1));
        };
        if (v instanceof JIndex) {
            return new JIndex(v.value0, downField$prime(v.value1));
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 94, column 3 - line 94, column 46): " + [ v.constructor.name ]);
    };
    return downField$prime;
};
var insideOut = function (v) {
    if (v instanceof JCursorTop) {
        return JCursorTop.value;
    };
    if (v instanceof JField) {
        return downField(v.value0)(insideOut(v.value1));
    };
    if (v instanceof JIndex) {
        return downIndex(v.value0)(insideOut(v.value1));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 87, column 1 - line 87, column 32): " + [ v.constructor.name ]);
};
var decodeJsonJCursor = new Data_Argonaut_Decode_Class.DecodeJson(function (j) {
    var goNum = function (c) {
        var $150 = Data_Maybe.maybe(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Int")))((function () {
            var $152 = Data_Function.flip(JIndex.create)(c);
            return function ($153) {
                return Data_Either.Right.create($152($153));
            };
        })());
        return function ($151) {
            return $150(Data_Int.fromNumber($151));
        };
    };
    var loop = function (arr) {
        return Data_Maybe.maybe(new Data_Either.Right(JCursorTop.value))(goLoop)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(arr)))(Data_Array.tail(arr)));
    };
    var goLoop = function (v) {
        return Control_Bind.bind(Data_Either.bindEither)(loop(v.value1))(function (c) {
            var fail = new Data_Either.Left(Data_Argonaut_Decode_Error.Named.create("Int or String")(new Data_Argonaut_Decode_Error.UnexpectedValue(v.value0)));
            return Data_Argonaut_Core.caseJson(Data_Function["const"](fail))(Data_Function["const"](fail))(goNum(c))((function () {
                var $154 = Data_Function.flip(JField.create)(c);
                return function ($155) {
                    return Data_Either.Right.create($154($155));
                };
            })())(Data_Function["const"](fail))(Data_Function["const"](fail))(v.value0);
        });
    };
    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))(j))(loop);
});
var cursorSet = function (v) {
    return function (v1) {
        if (v instanceof JCursorTop) {
            var $156 = Control_Applicative.pure(Data_Maybe.applicativeMaybe);
            var $157 = Data_Function["const"](v1);
            return function ($158) {
                return $156($157($158));
            };
        };
        if (v instanceof JField) {
            var mergeObjs = function (m) {
                return Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                    var $159 = Data_Function.flip(Foreign_Object.insert(v.value0))(m);
                    return function ($160) {
                        return Data_Argonaut_Core.fromObject($159($160));
                    };
                })())(cursorSet(v.value1)(v1)(Data_Maybe.fromMaybe(inferEmpty(v.value1))(Foreign_Object.lookup(v.value0)(m))));
            };
            var defaultObj = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                var $161 = Foreign_Object.singleton(v.value0);
                return function ($162) {
                    return Data_Argonaut_Core.fromObject($161($162));
                };
            })())(cursorSet(v.value1)(v1)(inferEmpty(v.value1)));
            return Data_Argonaut_Core.caseJsonObject(defaultObj)(mergeObjs);
        };
        if (v instanceof JIndex) {
            var setArr = function ($copy_xs) {
                return function ($copy_i$prime) {
                    return function ($copy_v$prime) {
                        var $tco_var_xs = $copy_xs;
                        var $tco_var_i$prime = $copy_i$prime;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(xs, i$prime, v$prime) {
                            var len = Data_Array.length(xs);
                            var $135 = i$prime < 0;
                            if ($135) {
                                $tco_done = true;
                                return Data_Maybe.Nothing.value;
                            };
                            var $136 = i$prime >= len;
                            if ($136) {
                                $tco_var_xs = Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)((i$prime - len | 0) + 1 | 0)(Data_Argonaut_Core.jsonNull));
                                $tco_var_i$prime = i$prime;
                                $copy_v$prime = v$prime;
                                return;
                            };
                            $tco_done = true;
                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Argonaut_Core.fromArray)(Data_Array.updateAt(i$prime)(v$prime)(xs));
                        };
                        while (!$tco_done) {
                            $tco_result = $tco_loop($tco_var_xs, $tco_var_i$prime, $copy_v$prime);
                        };
                        return $tco_result;
                    };
                };
            };
            var mergeArrs = function (a) {
                return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(setArr(a)(v.value0))(cursorSet(v.value1)(v1)(Data_Maybe.fromMaybe(inferEmpty(v.value1))(Data_Array.index(a)(v.value0))));
            };
            var defaultArr = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Argonaut_Core.fromArray)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Function.flip(Data_Array.updateAt(v.value0))(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(v.value0 + 1 | 0)(Data_Argonaut_Core.jsonNull)))(cursorSet(v.value1)(v1)(inferEmpty(v.value1))));
            return Data_Argonaut_Core.caseJsonArray(defaultArr)(mergeArrs);
        };
        throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 114, column 1 - line 114, column 57): " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var fromPrims = function (lst) {
    var f = function (j) {
        return function (v) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(j)(cursorSet(v.value0)(primToJson(v.value1)));
        };
    };
    return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($163) {
        return inferEmpty(Data_Tuple.fst($163));
    })(Data_List.head(lst)))(lst);
};
var cursorGet = function (v) {
    if (v instanceof JCursorTop) {
        return Data_Maybe.Just.create;
    };
    if (v instanceof JField) {
        return Data_Argonaut_Core.caseJsonObject(Data_Maybe.Nothing.value)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(cursorGet(v.value1))(Foreign_Object.lookup(v.value0)));
    };
    if (v instanceof JIndex) {
        return Data_Argonaut_Core.caseJsonArray(Data_Maybe.Nothing.value)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(cursorGet(v.value1))(function (v1) {
            return Data_Array.index(v1)(v.value0);
        }));
    };
    throw new Error("Failed pattern match at Data.Argonaut.JCursor (line 104, column 1 - line 104, column 47): " + [ v.constructor.name ]);
};
module.exports = {
    JCursorTop: JCursorTop,
    JField: JField,
    JIndex: JIndex,
    print: print,
    JsonPrim: JsonPrim,
    runJsonPrim: runJsonPrim,
    primNull: primNull,
    primBool: primBool,
    primNum: primNum,
    primStr: primStr,
    primToJson: primToJson,
    insideOut: insideOut,
    downField: downField,
    downIndex: downIndex,
    cursorGet: cursorGet,
    inferEmpty: inferEmpty,
    cursorSet: cursorSet,
    toPrims: toPrims,
    fromPrims: fromPrims,
    eqJCursor: eqJCursor,
    ordJCursor: ordJCursor,
    showJCursor: showJCursor,
    semigroupJCursor: semigroupJCursor,
    monoidJCursor: monoidJCursor,
    encodeJsonJCursor: encodeJsonJCursor,
    showJsonPrim: showJsonPrim,
    decodeJsonJCursor: decodeJsonJCursor
};
