// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Node_HTTP = require("../Node.HTTP/index.js");
var setCookieHeader = function (name) {
    return function (val) {
        return new Data_Tuple.Tuple("Set-Cookie", $foreign.serializeImpl(name)(val));
    };
};
var requestCookieHeader = (function () {
    var $7 = Foreign_Object.lookup("cookie");
    return function ($8) {
        return $7(Node_HTTP.requestHeaders($8));
    };
})();
var parseCookieHeader = function (header) {
    return Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)($foreign.parseWrapper(header)));
};
var requestCookies = function (req) {
    var v = requestCookieHeader(req);
    if (v instanceof Data_Maybe.Just) {
        return parseCookieHeader(v.value0);
    };
    if (v instanceof Data_Maybe.Nothing) {
        return Data_Monoid.mempty(Data_Map_Internal.monoidMap(Data_Ord.ordString));
    };
    throw new Error("Failed pattern match at Payload.Server.Cookies (line 23, column 22 - line 25, column 20): " + [ v.constructor.name ]);
};
var cookieHeader = function (cookies) {
    var serialize = function (v) {
        return $foreign.serializeImpl(v.value0)(v.value1);
    };
    var cookiesArray = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(cookies);
    var cookiesStr = Data_String_Common.joinWith("; ")(Data_Functor.map(Data_Functor.functorArray)(serialize)(cookiesArray));
    return new Data_Tuple.Tuple("Cookie", cookiesStr);
};
module.exports = {
    cookieHeader: cookieHeader,
    parseCookieHeader: parseCookieHeader,
    requestCookies: requestCookies,
    setCookieHeader: setCookieHeader
};
