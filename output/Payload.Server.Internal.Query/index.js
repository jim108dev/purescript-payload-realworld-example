// Generated by purs version 0.13.8
"use strict";
var Data_Either = require("../Data.Either/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Payload_Internal_QueryParsing = require("../Payload.Internal.QueryParsing/index.js");
var Payload_Server_Internal_Querystring = require("../Payload.Server.Internal.Querystring/index.js");
var Payload_Server_QueryParams = require("../Payload.Server.QueryParams/index.js");
var Record = require("../Record/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var MatchQuery = function (matchQuery) {
    this.matchQuery = matchQuery;
};
var DecodeQuery = function (decodeQuery) {
    this.decodeQuery = decodeQuery;
};
var matchQueryNil = function (dictTypeEquals) {
    return new MatchQuery(function (v) {
        return function (v1) {
            return function (query) {
                return function (v2) {
                    return new Data_Either.Right(Type_Equality.to(dictTypeEquals)(query));
                };
            };
        };
    });
};
var matchQueryConsMulti = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (dictLacks) {
                return function (dictDecodeQueryParamMulti) {
                    return function (dictTypeEquals) {
                        return new MatchQuery(function (v) {
                            return function (queryType) {
                                return function (query) {
                                    return function (queryObj) {
                                        var v1 = Payload_Server_QueryParams.decodeQueryParamMulti(dictDecodeQueryParamMulti)(queryObj);
                                        if (v1 instanceof Data_Either.Left) {
                                            return Data_Either.Left.create(Data_Show.show(Payload_Server_QueryParams.showDecodeError)(v1.value0));
                                        };
                                        if (v1 instanceof Data_Either.Right) {
                                            return new Data_Either.Right(Type_Equality.to(dictTypeEquals)(Record.insert(dictIsSymbol)()()(Data_Symbol.SProxy.value)(v1.value0)(query)));
                                        };
                                        throw new Error("Failed pattern match at Payload.Server.Internal.Query (line 49, column 5 - line 51, column 90): " + [ v1.constructor.name ]);
                                    };
                                };
                            };
                        });
                    };
                };
            };
        };
    };
};
var matchQuery = function (dict) {
    return dict.matchQuery;
};
var matchQueryConsKey = function (dictIsSymbol) {
    return function (dictIsSymbol1) {
        return function (dictMatchQuery) {
            return function (dictCons) {
                return function (dictCons1) {
                    return function (dictLacks) {
                        return function (dictDecodeQueryParam) {
                            return new MatchQuery(function (v) {
                                return function (queryType) {
                                    return function (query) {
                                        return function (queryObj) {
                                            var queryKey = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                            var v1 = Payload_Server_QueryParams.decodeQueryParam(dictDecodeQueryParam)(queryObj)(queryKey);
                                            if (v1 instanceof Data_Either.Left) {
                                                return Data_Either.Left.create(Data_Show.show(Payload_Server_QueryParams.showDecodeError)(v1.value0));
                                            };
                                            if (v1 instanceof Data_Either.Right) {
                                                var newQueryObj = Foreign_Object["delete"](queryKey)(queryObj);
                                                var newParams = Record.insert(dictIsSymbol1)()()(Data_Symbol.SProxy.value)(v1.value0)(query);
                                                return matchQuery(dictMatchQuery)(Payload_Internal_QueryParsing.QueryListProxy.value)(queryType)(newParams)(newQueryObj);
                                            };
                                            throw new Error("Failed pattern match at Payload.Server.Internal.Query (line 63, column 5 - line 67, column 96): " + [ v1.constructor.name ]);
                                        };
                                    };
                                };
                            });
                        };
                    };
                };
            };
        };
    };
};
var decodeQueryAny = function (dictParseQuery) {
    return function (dictMatchQuery) {
        return new DecodeQuery(function (v) {
            return function (queryType) {
                return function (queryStr) {
                    var parsedQuery = Payload_Server_Internal_Querystring.querystringParse(queryStr);
                    return matchQuery(dictMatchQuery)(Payload_Internal_QueryParsing.QueryListProxy.value)(queryType)({})(parsedQuery);
                };
            };
        });
    };
};
var decodeQuery = function (dict) {
    return dict.decodeQuery;
};
module.exports = {
    decodeQuery: decodeQuery,
    matchQuery: matchQuery,
    DecodeQuery: DecodeQuery,
    MatchQuery: MatchQuery,
    decodeQueryAny: decodeQueryAny,
    matchQueryNil: matchQueryNil,
    matchQueryConsMulti: matchQueryConsMulti,
    matchQueryConsKey: matchQueryConsKey
};
