// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Node_FS_Async = require("../Node.FS.Async/index.js");
var toAff = function (p) {
    return Effect_Aff.makeAff(function (k) {
        return Data_Functor.voidLeft(Effect.functorEffect)(p(k))(Effect_Aff.nonCanceler);
    });
};
var toAff1 = function (f) {
    return function (a) {
        return toAff(f(a));
    };
};
var unlink = toAff1(Node_FS_Async.unlink);
var toAff2 = function (f) {
    return function (a) {
        return function (b) {
            return toAff(f(a)(b));
        };
    };
};
var truncate = toAff2(Node_FS_Async.truncate);
var writeFile = toAff2(Node_FS_Async.writeFile);
var toAff3 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return toAff(f(a)(b)(c));
            };
        };
    };
};
var utimes = toAff3(Node_FS_Async.utimes);
var writeTextFile = toAff3(Node_FS_Async.writeTextFile);
var toAff5 = function (f) {
    return function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return toAff(f(a)(b)(c)(d)(e));
                    };
                };
            };
        };
    };
};
var symlink = toAff3(Node_FS_Async.symlink);
var stat = toAff1(Node_FS_Async.stat);
var rmdir = toAff1(Node_FS_Async.rmdir);
var rename = toAff2(Node_FS_Async.rename);
var realpath$prime = toAff2(Node_FS_Async["realpath'"]);
var realpath = toAff1(Node_FS_Async.realpath);
var readlink = toAff1(Node_FS_Async.readlink);
var readdir = toAff1(Node_FS_Async.readdir);
var readTextFile = toAff2(Node_FS_Async.readTextFile);
var readFile = toAff1(Node_FS_Async.readFile);
var mkdir$prime = toAff2(Node_FS_Async["mkdir'"]);
var mkdir = toAff1(Node_FS_Async.mkdir);
var link = toAff2(Node_FS_Async.link);
var fdWrite = toAff5(Node_FS_Async.fdWrite);
var fdRead = toAff5(Node_FS_Async.fdRead);
var fdOpen = toAff3(Node_FS_Async.fdOpen);
var fdNext = toAff2(Node_FS_Async.fdNext);
var fdClose = toAff1(Node_FS_Async.fdClose);
var fdAppend = toAff2(Node_FS_Async.fdAppend);
var exists = function (file) {
    return Effect_Aff.makeAff(function (k) {
        return Data_Functor.voidLeft(Effect.functorEffect)(Node_FS_Async.exists(file)((function () {
            var $0 = Control_Applicative.pure(Data_Either.applicativeEither);
            return function ($1) {
                return k($0($1));
            };
        })()))(Effect_Aff.nonCanceler);
    });
};
var chown = toAff3(Node_FS_Async.chown);
var chmod = toAff2(Node_FS_Async.chmod);
var appendTextFile = toAff3(Node_FS_Async.appendTextFile);
var appendFile = toAff2(Node_FS_Async.appendFile);
module.exports = {
    rename: rename,
    truncate: truncate,
    chown: chown,
    chmod: chmod,
    stat: stat,
    link: link,
    symlink: symlink,
    readlink: readlink,
    realpath: realpath,
    "realpath'": realpath$prime,
    unlink: unlink,
    rmdir: rmdir,
    mkdir: mkdir,
    "mkdir'": mkdir$prime,
    readdir: readdir,
    utimes: utimes,
    readFile: readFile,
    readTextFile: readTextFile,
    writeFile: writeFile,
    writeTextFile: writeTextFile,
    appendFile: appendFile,
    appendTextFile: appendTextFile,
    exists: exists,
    fdOpen: fdOpen,
    fdRead: fdRead,
    fdNext: fdNext,
    fdWrite: fdWrite,
    fdAppend: fdAppend,
    fdClose: fdClose
};
