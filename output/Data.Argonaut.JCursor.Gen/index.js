// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Lazy = require("../Control.Lazy/index.js");
var Control_Monad_Gen = require("../Control.Monad.Gen/index.js");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class/index.js");
var Data_Argonaut_JCursor = require("../Data.Argonaut.JCursor/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_String_Gen = require("../Data.String.Gen/index.js");
var genJCursor = function (dictMonadGen) {
    return function (dictMonadRec) {
        return function (dictLazy) {
            var genIndex = Control_Apply.apply(((dictMonadGen.Monad0()).Bind1()).Apply0())(Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Argonaut_JCursor.JIndex.create)(Control_Monad_Gen_Class.chooseInt(dictMonadGen)(0)(1000)))(Control_Lazy.defer(dictLazy)(function (v) {
                return genJCursor(dictMonadGen)(dictMonadRec)(dictLazy);
            }));
            var genField = Control_Apply.apply(((dictMonadGen.Monad0()).Bind1()).Apply0())(Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Argonaut_JCursor.JField.create)(Data_String_Gen.genUnicodeString(dictMonadRec)(dictMonadGen)))(Control_Lazy.defer(dictLazy)(function (v) {
                return genJCursor(dictMonadGen)(dictMonadRec)(dictLazy);
            }));
            var genJCursor$prime = function (size) {
                if (size > 0) {
                    return Control_Monad_Gen_Class.resize(dictMonadGen)(function (v) {
                        return v - 1 | 0;
                    })(Control_Monad_Gen.choose(dictMonadGen)(genField)(genIndex));
                };
                if (Data_Boolean.otherwise) {
                    return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(Data_Argonaut_JCursor.JCursorTop.value);
                };
                throw new Error("Failed pattern match at Data.Argonaut.JCursor.Gen (line 16, column 3 - line 18, column 34): " + [ size.constructor.name ]);
            };
            return Control_Monad_Gen_Class.resize(dictMonadGen)(Data_Ord.min(Data_Ord.ordInt)(10))(Control_Monad_Gen_Class.sized(dictMonadGen)(genJCursor$prime));
        };
    };
};
module.exports = {
    genJCursor: genJCursor
};
