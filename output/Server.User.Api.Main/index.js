// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Server_Shared_Api_Main = require("../Server.Shared.Api.Main/index.js");
var Server_User_Api_Type_CreateDto = require("../Server.User.Api.Type.CreateDto/index.js");
var Server_User_Api_Type_LoginDto = require("../Server.User.Api.Type.LoginDto/index.js");
var Server_User_Api_Type_Misc = require("../Server.User.Api.Type.Misc/index.js");
var Server_User_Api_Type_UpdateDto = require("../Server.User.Api.Type.UpdateDto/index.js");
var Server_User_Application_Main = require("../Server.User.Application.Main/index.js");
var Server_User_Persistence_Postgres = require("../Server.User.Persistence.Postgres/index.js");
var Server_User_Type_Misc = require("../Server.User.Type.Misc/index.js");
var renderError = function (v) {
    if (v instanceof Server_User_Type_Misc.EMAIL_EXISTS) {
        return Payload_Server_Response.unprocessableEntity(Server_Shared_Api_Main.renderErrorEntity("email")("exists"));
    };
    if (v instanceof Server_User_Type_Misc.USERNAME_EXISTS) {
        return Payload_Server_Response.unprocessableEntity(Server_Shared_Api_Main.renderErrorEntity("username")("exists"));
    };
    if (v instanceof Server_User_Type_Misc.NOT_FOUND) {
        return Payload_Server_Response.notFound(Server_Shared_Api_Main.renderErrorMessage("user not found"));
    };
    throw new Error("Failed pattern match at Server.User.Api.Main (line 64, column 1 - line 64, column 45): " + [ v.constructor.name ]);
};
var next = function (h) {
    return Server_User_Persistence_Postgres.mkHandle(h.persistence.pool.value0);
};
var mkTResponse = function (h) {
    return function (appResult) {
        if (appResult instanceof Data_Either.Left) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Either.Left.create(renderError(appResult.value0)));
        };
        if (appResult instanceof Data_Either.Right) {
            return Data_Functor.map(Effect_Aff.functorAff)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Functor.functorFn)(Data_Either.Right.create)(Payload_Server_Response.ok))(Server_User_Api_Type_Misc.mkDto(appResult.value0)))(h.token.encode(appResult.value0.id));
        };
        throw new Error("Failed pattern match at Server.User.Api.Main (line 60, column 27 - line 62, column 71): " + [ appResult.constructor.name ]);
    };
};
var update = function (h) {
    return function (v) {
        return Data_Functor.map(Effect_Aff.functorAff)(Server_Shared_Api_Main.setHeaders(v.guards.origin))(Control_Bind.bind(Effect_Aff.bindAff)(Server_User_Application_Main.update(next(h))(Server_User_Api_Type_UpdateDto.unwrapUpdateDto(v.body))(v.guards.userId))(mkTResponse(h)));
    };
};
var login = function (h) {
    return function (v) {
        return Data_Functor.map(Effect_Aff.functorAff)(Server_Shared_Api_Main.setHeaders(v.guards.origin))(Control_Bind.bind(Effect_Aff.bindAff)((next(h)).findByCredentials(Server_User_Api_Type_LoginDto.unwrapLoginDto(v.body)))(mkTResponse(h)));
    };
};
var getCurrent = function (h) {
    return function (v) {
        return Data_Functor.map(Effect_Aff.functorAff)(Server_Shared_Api_Main.setHeaders(v.guards.origin))(Control_Bind.bind(Effect_Aff.bindAff)((next(h)).findById(v.guards.userId))(mkTResponse(h)));
    };
};
var $$delete = function (h) {
    return function (v) {
        return Data_Functor.map(Effect_Aff.functorAff)(Server_Shared_Api_Main.setHeaders(v.guards.origin))(Control_Bind.bind(Effect_Aff.bindAff)((next(h))["delete"](v.guards.userId))(mkTResponse(h)));
    };
};
var create = function (h) {
    return function (v) {
        return Data_Functor.map(Effect_Aff.functorAff)(Server_Shared_Api_Main.setHeaders(v.guards.origin))(Control_Bind.bind(Effect_Aff.bindAff)((next(h)).insert(Server_User_Api_Type_CreateDto.unwrapCreateDto(v.body)))(mkTResponse(h)));
    };
};
var mkHandle = function (h) {
    return {
        login: login(h),
        create: create(h),
        getCurrent: getCurrent(h),
        update: update(h),
        "delete": $$delete(h)
    };
};
module.exports = {
    mkHandle: mkHandle,
    next: next,
    login: login,
    create: create,
    getCurrent: getCurrent,
    update: update,
    "delete": $$delete,
    mkTResponse: mkTResponse,
    renderError: renderError
};
