// Generated by purs version 0.13.8
"use strict";
var Data_Array = require("../Data.Array/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Payload_Client_EncodeParam = require("../Payload.Client.EncodeParam/index.js");
var Payload_Internal_UrlParsing = require("../Payload.Internal.UrlParsing/index.js");
var Record = require("../Record/index.js");
var WriteUrl = function (writeUrl) {
    this.writeUrl = writeUrl;
};
var EncodeUrl = function (encodeUrl) {
    this.encodeUrl = encodeUrl;
};
var writeUrlUrlNil = new WriteUrl(function (v) {
    return function (params) {
        return "";
    };
});
var writeUrlConsMulti = function (dictIsSymbol) {
    return function (dictCons) {
        return new WriteUrl(function (v) {
            return function (params) {
                var multiList = Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(params);
                var multiStr = Data_String_Common.joinWith("/")(Data_Array.fromFoldable(Data_List_Types.foldableList)(multiList));
                return "/" + multiStr;
            };
        });
    };
};
var writeUrl = function (dict) {
    return dict.writeUrl;
};
var writeUrlConsKey = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictLacks) {
            return function (dictEncodeParam) {
                return function (dictWriteUrl) {
                    return new WriteUrl(function (v) {
                        return function (params) {
                            var restOfParams = Record["delete"](dictIsSymbol)()()(Data_Symbol.SProxy.value)(params);
                            var restOfUrl = writeUrl(dictWriteUrl)(Payload_Internal_UrlParsing.UrlListProxy.value)(restOfParams);
                            var encodedParam = Payload_Client_EncodeParam.encodeParam(dictEncodeParam)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(params));
                            return "/" + (encodedParam + restOfUrl);
                        };
                    });
                };
            };
        };
    };
};
var writeUrlConsLit = function (dictIsSymbol) {
    return function (dictWriteUrl) {
        return new WriteUrl(function (v) {
            return function (params) {
                var restOfUrl = writeUrl(dictWriteUrl)(Payload_Internal_UrlParsing.UrlListProxy.value)(params);
                var litStr = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                return "/" + (litStr + restOfUrl);
            };
        });
    };
};
var encodeUrlRecord = function (dictParseUrl) {
    return function (dictWriteUrl) {
        return new EncodeUrl(function (v) {
            return function (params) {
                return writeUrl(dictWriteUrl)(Payload_Internal_UrlParsing.UrlListProxy.value)(params);
            };
        });
    };
};
var encodeUrl = function (dict) {
    return dict.encodeUrl;
};
module.exports = {
    encodeUrl: encodeUrl,
    writeUrl: writeUrl,
    EncodeUrl: EncodeUrl,
    WriteUrl: WriteUrl,
    encodeUrlRecord: encodeUrlRecord,
    writeUrlUrlNil: writeUrlUrlNil,
    writeUrlConsKey: writeUrlConsKey,
    writeUrlConsLit: writeUrlConsLit,
    writeUrlConsMulti: writeUrlConsMulti
};
