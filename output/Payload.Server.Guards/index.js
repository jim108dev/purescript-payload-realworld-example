// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Node_HTTP = require("../Node.HTTP/index.js");
var Payload_Headers = require("../Payload.Headers/index.js");
var Payload_ResponseTypes = require("../Payload.ResponseTypes/index.js");
var Payload_Server_Cookies = require("../Payload.Server.Cookies/index.js");
var Payload_Server_Internal_GuardParsing = require("../Payload.Server.Internal.GuardParsing/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Payload_Spec = require("../Payload.Spec/index.js");
var Record = require("../Record/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var ToGuardVal = function (toGuardVal) {
    this.toGuardVal = toGuardVal;
};
var RunGuards = function (runGuards) {
    this.runGuards = runGuards;
};
var toGuardValIdentity = new ToGuardVal(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff)));
var toGuardValEitherValVal = function (dictEncodeResponse) {
    return new ToGuardVal(function (v) {
        if (v instanceof Data_Either.Left) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Response.encodeResponse(dictEncodeResponse)(Payload_Server_Response.internalError(v.value0)))(function (raw) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Payload_ResponseTypes["Error"](raw));
            });
        };
        if (v instanceof Data_Either.Right) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(v.value0);
        };
        throw new Error("Failed pattern match at Payload.Server.Guards (line 53, column 6 - line 59, column 36): " + [ v.constructor.name ]);
    });
};
var toGuardValEitherResponseVal = function (dictEncodeResponse) {
    return new ToGuardVal(function (v) {
        if (v instanceof Data_Either.Left) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Payload_Server_Response.encodeResponse(dictEncodeResponse)(v.value0))(function (raw) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(new Payload_ResponseTypes["Error"](raw));
            });
        };
        if (v instanceof Data_Either.Right) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(v.value0);
        };
        throw new Error("Failed pattern match at Payload.Server.Guards (line 46, column 6 - line 52, column 36): " + [ v.constructor.name ]);
    });
};
var toGuardValEitherFailureVal = new ToGuardVal(function (v) {
    if (v instanceof Data_Either.Left) {
        return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Effect_Aff.monadAff))(v.value0);
    };
    if (v instanceof Data_Either.Right) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(v.value0);
    };
    throw new Error("Failed pattern match at Payload.Server.Guards (line 42, column 1 - line 45, column 36): " + [ v.constructor.name ]);
});
var toGuardVal = function (dict) {
    return dict.toGuardVal;
};
var runGuardsNil = new RunGuards(function (v) {
    return function (v1) {
        return function (allGuards) {
            return function (results) {
                return function (req) {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Effect_Aff.monadAff))(results);
                };
            };
        };
    };
});
var runGuards = function (dict) {
    return dict.runGuards;
};
var runGuardsCons = function (dictIsSymbol) {
    return function (dictCons) {
        return function (dictCons1) {
            return function (dictCons2) {
                return function (dictLacks) {
                    return function (dictToGuardVal) {
                        return function (dictRunGuards) {
                            return new RunGuards(function (v) {
                                return function (v1) {
                                    return function (allGuards) {
                                        return function (results) {
                                            return function (req) {
                                                var v2 = Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(Type_Equality.to(Type_Equality.refl)(allGuards));
                                                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(Effect_Aff.monadAff)(v2(req)))(function (v3) {
                                                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Effect_Aff.monadAff))(toGuardVal(dictToGuardVal)(v3))(function (v4) {
                                                        var newResults = Record.insert(dictIsSymbol)()()(Data_Symbol.SProxy.value)(v4)(results);
                                                        return runGuards(dictRunGuards)(Payload_Spec.Guards.value)(Payload_Server_Internal_GuardParsing.GuardTypes.value)(allGuards)(newResults)(req);
                                                    });
                                                });
                                            };
                                        };
                                    };
                                };
                            });
                        };
                    };
                };
            };
        };
    };
};
var rawRequest = function (req) {
    return Control_Applicative.pure(Effect_Aff.applicativeAff)(req);
};
var headers = function (req) {
    var headersArr = Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(Node_HTTP.requestHeaders(req));
    return Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Headers.fromFoldable(Data_Foldable.foldableArray)(headersArr));
};
var cookies = function (req) {
    return Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Server_Cookies.requestCookies(req));
};
module.exports = {
    headers: headers,
    rawRequest: rawRequest,
    cookies: cookies,
    ToGuardVal: ToGuardVal,
    toGuardVal: toGuardVal,
    RunGuards: RunGuards,
    runGuards: runGuards,
    toGuardValEitherFailureVal: toGuardValEitherFailureVal,
    toGuardValEitherResponseVal: toGuardValEitherResponseVal,
    toGuardValEitherValVal: toGuardValEitherValVal,
    toGuardValIdentity: toGuardValIdentity,
    runGuardsNil: runGuardsNil,
    runGuardsCons: runGuardsCons
};
