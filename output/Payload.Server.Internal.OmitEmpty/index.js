// Generated by purs version 0.13.8
"use strict";
var Data_Symbol = require("../Data.Symbol/index.js");
var Record = require("../Record/index.js");
var Type_Data_RowList = require("../Type.Data.RowList/index.js");
var RemoveEmptyField = function (removeEmptyField) {
    this.removeEmptyField = removeEmptyField;
};
var OmitEmptyFields = function (omitEmptyFields) {
    this.omitEmptyFields = omitEmptyFields;
};
var OmitEmpty = function (omitEmpty) {
    this.omitEmpty = omitEmpty;
};
var removeEmptyFieldNotEmptyUndefined = function (dictCons) {
    return function (dictIsSymbol) {
        return function (dictLacks) {
            return new RemoveEmptyField(function (v) {
                return function (v1) {
                    return function (record) {
                        return Record["delete"](dictIsSymbol)()()(Data_Symbol.SProxy.value)(record);
                    };
                };
            });
        };
    };
};
var removeEmptyFieldNotEmptyOther = new RemoveEmptyField(function (v) {
    return function (v1) {
        return function (record) {
            return record;
        };
    };
});
var removeEmptyFieldNil = function (dictCons) {
    return function (dictIsSymbol) {
        return function (dictLacks) {
            return new RemoveEmptyField(function (v) {
                return function (v1) {
                    return function (record) {
                        return Record["delete"](dictIsSymbol)()()(Data_Symbol.SProxy.value)(record);
                    };
                };
            });
        };
    };
};
var removeEmptyField = function (dict) {
    return dict.removeEmptyField;
};
var omitEmptyFieldsNil = new OmitEmptyFields(function (v) {
    return function (record) {
        return record;
    };
});
var omitEmptyFields = function (dict) {
    return dict.omitEmptyFields;
};
var omitEmptyFieldsConsOther = function (dictOmitEmptyFields) {
    return new OmitEmptyFields(function (v) {
        return function (record) {
            return omitEmptyFields(dictOmitEmptyFields)(Type_Data_RowList.RLProxy.value)(record);
        };
    });
};
var omitEmptyFieldsConsRecord = function (dictRowToList) {
    return function (dictCons) {
        return function (dictRemoveEmptyField) {
            return function (dictOmitEmptyFields) {
                return new OmitEmptyFields(function (v) {
                    return function (record) {
                        var newRecord = removeEmptyField(dictRemoveEmptyField)(Data_Symbol.SProxy.value)(Type_Data_RowList.RLProxy.value)(record);
                        return omitEmptyFields(dictOmitEmptyFields)(Type_Data_RowList.RLProxy.value)(newRecord);
                    };
                });
            };
        };
    };
};
var omitEmptyFieldsConsUndefined = function (dictCons) {
    return function (dictLacks) {
        return function (dictIsSymbol) {
            return function (dictOmitEmptyFields) {
                return new OmitEmptyFields(function (v) {
                    return function (record) {
                        var newRecord = Record["delete"](dictIsSymbol)()()(Data_Symbol.SProxy.value)(record);
                        return omitEmptyFields(dictOmitEmptyFields)(Type_Data_RowList.RLProxy.value)(newRecord);
                    };
                });
            };
        };
    };
};
var omitEmptyAny = function (dictRowToList) {
    return function (dictOmitEmptyFields) {
        return new OmitEmpty(function (record) {
            return omitEmptyFields(dictOmitEmptyFields)(Type_Data_RowList.RLProxy.value)(record);
        });
    };
};
var omitEmpty = function (dict) {
    return dict.omitEmpty;
};
module.exports = {
    omitEmpty: omitEmpty,
    omitEmptyFields: omitEmptyFields,
    removeEmptyField: removeEmptyField,
    OmitEmpty: OmitEmpty,
    OmitEmptyFields: OmitEmptyFields,
    RemoveEmptyField: RemoveEmptyField,
    omitEmptyAny: omitEmptyAny,
    omitEmptyFieldsNil: omitEmptyFieldsNil,
    omitEmptyFieldsConsRecord: omitEmptyFieldsConsRecord,
    omitEmptyFieldsConsUndefined: omitEmptyFieldsConsUndefined,
    omitEmptyFieldsConsOther: omitEmptyFieldsConsOther,
    removeEmptyFieldNil: removeEmptyFieldNil,
    removeEmptyFieldNotEmptyUndefined: removeEmptyFieldNotEmptyUndefined,
    removeEmptyFieldNotEmptyOther: removeEmptyFieldNotEmptyOther
};
