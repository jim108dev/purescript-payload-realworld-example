// Generated by purs version 0.13.8
"use strict";
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");
var Data_DateTime = require("../Data.DateTime/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Formatter_DateTime = require("../Data.Formatter.DateTime/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_Regex = require("../Data.String.Regex/index.js");
var Data_String_Regex_Flags = require("../Data.String.Regex.Flags/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Time = require("../Data.Time/index.js");
var Data_Time_Component = require("../Data.Time.Component/index.js");
var Effect = require("../Effect/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Now = require("../Effect.Now/index.js");
var Foreign = require("../Foreign/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Simple_JSON = require("../Simple.JSON/index.js");
var Timestamp = function (x) {
    return x;
};
var stripMillis = (function () {
    var theRegex = Data_Either.either(Partial_Unsafe.unsafeCrashWith)(Control_Category.identity(Control_Category.categoryFn))(Data_String_Regex.regex("\\.(\\d)(\\d)(\\d)\\d+")(Data_String_Regex_Flags.noFlags));
    return Data_String_Regex.replace(theRegex)(".$1$2$3");
})();
var ordTimestamp = Data_DateTime.ordDateTime;
var nowTimestamp = function (dictMonadEffect) {
    return Effect_Class.liftEffect(dictMonadEffect)(Data_Functor.map(Effect.functorEffect)(Timestamp)(Effect_Now.nowDateTime));
};
var newtypeTimestamp = new Data_Newtype.Newtype(function (n) {
    return n;
}, Timestamp);
var mkIso8601Format = function (milliParser) {
    return Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Formatter_DateTime.YearFull.value, new Data_Formatter_DateTime.Placeholder("-"), Data_Formatter_DateTime.MonthTwoDigits.value, new Data_Formatter_DateTime.Placeholder("-"), Data_Formatter_DateTime.DayOfMonthTwoDigits.value, new Data_Formatter_DateTime.Placeholder("T"), Data_Formatter_DateTime.Hours24.value, new Data_Formatter_DateTime.Placeholder(":"), Data_Formatter_DateTime.MinutesTwoDigits.value, new Data_Formatter_DateTime.Placeholder(":"), Data_Formatter_DateTime.SecondsTwoDigits.value ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(milliParser)([ new Data_Formatter_DateTime.Placeholder("Z") ])));
};
var iso8601ShortFormat = mkIso8601Format([  ]);
var iso8601LongFormat = mkIso8601Format([ new Data_Formatter_DateTime.Placeholder("."), Data_Formatter_DateTime.Milliseconds.value ]);
var iso86012DigitsMillisFormat = mkIso8601Format([ new Data_Formatter_DateTime.Placeholder("."), Data_Formatter_DateTime.MillisecondsTwoDigits.value ]);
var iso86011DigitMillisFormat = mkIso8601Format([ new Data_Formatter_DateTime.Placeholder("."), Data_Formatter_DateTime.MillisecondsShort.value ]);
var printTimestamp = function (v) {
    var millis = Data_Enum.fromEnum(Data_Time_Component.boundedEnumMillisecond)(Data_Time.millisecond(Data_DateTime.time(v)));
    var milliDigits = (function () {
        if (millis === 0) {
            return iso8601ShortFormat;
        };
        if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(millis)(100) === 0) {
            return iso86011DigitMillisFormat;
        };
        if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(millis)(10) === 0) {
            return iso86012DigitsMillisFormat;
        };
        return iso8601LongFormat;
    })();
    return Data_Formatter_DateTime.format(milliDigits)(v);
};
var writeTimestamp = new Simple_JSON.WriteForeign((function () {
    var $14 = Simple_JSON.writeImpl(Simple_JSON.writeForeignString);
    return function ($15) {
        return $14(printTimestamp($15));
    };
})());
var readTimestamp = new Simple_JSON.ReadForeign(function (v) {
    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Simple_JSON.readImpl(Simple_JSON.readString)(v))(function (s) {
        var as = Data_Function.flip(Data_Formatter_DateTime.unformat)(s);
        var parsed = Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(as(iso8601ShortFormat))(as(iso86011DigitMillisFormat)))(as(iso86012DigitsMillisFormat)))(as(iso8601LongFormat)))(Data_Formatter_DateTime.unformat(iso8601LongFormat)(stripMillis(s)));
        if (parsed instanceof Data_Either.Right) {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(parsed.value0);
        };
        if (parsed instanceof Data_Either.Left) {
            return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(new Foreign.ForeignError(parsed.value0)));
        };
        throw new Error("Failed pattern match at Timestamp (line 74, column 5 - line 76, column 51): " + [ parsed.constructor.name ]);
    });
});
var genericTimestamp = new Data_Generic_Rep.Generic(function (x) {
    return x;
}, function (x) {
    return x;
});
var showTimestamp = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTimestamp)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_DateTime.showDateTime))(new Data_Symbol.IsSymbol(function () {
    return "Timestamp";
}))));
var eqTimestamp = Data_DateTime.eqDateTime;
module.exports = {
    mkIso8601Format: mkIso8601Format,
    iso8601ShortFormat: iso8601ShortFormat,
    iso86011DigitMillisFormat: iso86011DigitMillisFormat,
    iso86012DigitsMillisFormat: iso86012DigitsMillisFormat,
    iso8601LongFormat: iso8601LongFormat,
    stripMillis: stripMillis,
    Timestamp: Timestamp,
    nowTimestamp: nowTimestamp,
    printTimestamp: printTimestamp,
    eqTimestamp: eqTimestamp,
    ordTimestamp: ordTimestamp,
    readTimestamp: readTimestamp,
    writeTimestamp: writeTimestamp,
    genericTimestamp: genericTimestamp,
    newtypeTimestamp: newtypeTimestamp,
    showTimestamp: showTimestamp
};
