// Generated by purs version 0.13.8
"use strict";
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Equivalence = function (x) {
    return x;
};
var semigroupEquivalence = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function (a) {
            return function (b) {
                return v(a)(b) && v1(a)(b);
            };
        };
    };
});
var newtypeEquivalence = new Data_Newtype.Newtype(function (n) {
    return n;
}, Equivalence);
var monoidEquivalence = new Data_Monoid.Monoid(function () {
    return semigroupEquivalence;
}, function (v) {
    return function (v1) {
        return true;
    };
});
var defaultEquivalence = function (dictEq) {
    return Data_Eq.eq(dictEq);
};
var contravariantEquivalence = new Data_Functor_Contravariant.Contravariant(function (f) {
    return function (v) {
        return Data_Function.on(v)(f);
    };
});
var comparisonEquivalence = function (v) {
    return function (a) {
        return function (b) {
            return Data_Eq.eq(Data_Ordering.eqOrdering)(v(a)(b))(Data_Ordering.EQ.value);
        };
    };
};
module.exports = {
    Equivalence: Equivalence,
    defaultEquivalence: defaultEquivalence,
    comparisonEquivalence: comparisonEquivalence,
    newtypeEquivalence: newtypeEquivalence,
    contravariantEquivalence: contravariantEquivalence,
    semigroupEquivalence: semigroupEquivalence,
    monoidEquivalence: monoidEquivalence
};
