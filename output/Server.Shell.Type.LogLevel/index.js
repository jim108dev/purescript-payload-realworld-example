// Generated by purs version 0.13.8
"use strict";
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Server_Shared_Util_Json = require("../Server.Shared.Util.Json/index.js");
var Simple_JSON = require("../Simple.JSON/index.js");
var Debug = (function () {
    function Debug() {

    };
    Debug.value = new Debug();
    return Debug;
})();
var Silent = (function () {
    function Silent() {

    };
    Silent.value = new Silent();
    return Silent;
})();
var $$Error = (function () {
    function $$Error() {

    };
    $$Error.value = new $$Error();
    return $$Error;
})();
var Normal = (function () {
    function Normal() {

    };
    Normal.value = new Normal();
    return Normal;
})();
var genericLogLevel = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Debug) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Silent) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
    };
    if (x instanceof $$Error) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
    };
    if (x instanceof Normal) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
    };
    throw new Error("Failed pattern match at Server.Shell.Type.LogLevel (line 15, column 1 - line 15, column 54): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Debug.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return Silent.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
        return $$Error.value;
    };
    if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
        return Normal.value;
    };
    throw new Error("Failed pattern match at Server.Shell.Type.LogLevel (line 15, column 1 - line 15, column 54): " + [ x.constructor.name ]);
});
var logLevelReadForeign = new Simple_JSON.ReadForeign(Server_Shared_Util_Json.enumReadForeign(genericLogLevel)(Server_Shared_Util_Json.sumEnumReadForeign(Server_Shared_Util_Json.constructorEnumReadForeign(new Data_Symbol.IsSymbol(function () {
    return "Debug";
})))(Server_Shared_Util_Json.sumEnumReadForeign(Server_Shared_Util_Json.constructorEnumReadForeign(new Data_Symbol.IsSymbol(function () {
    return "Silent";
})))(Server_Shared_Util_Json.sumEnumReadForeign(Server_Shared_Util_Json.constructorEnumReadForeign(new Data_Symbol.IsSymbol(function () {
    return "Error";
})))(Server_Shared_Util_Json.constructorEnumReadForeign(new Data_Symbol.IsSymbol(function () {
    return "Normal";
})))))));
var logLevelShow = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericLogLevel)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Debug";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Silent";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Error";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Normal";
})))))));
module.exports = {
    Debug: Debug,
    Silent: Silent,
    "Error": $$Error,
    Normal: Normal,
    genericLogLevel: genericLogLevel,
    logLevelReadForeign: logLevelReadForeign,
    logLevelShow: logLevelShow
};
