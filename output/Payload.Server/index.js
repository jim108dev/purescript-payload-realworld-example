// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_List = require("../Data.List/index.js");
var Data_List_Types = require("../Data.List.Types/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Nullable = require("../Data.Nullable/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_String_Common = require("../Data.String.Common/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Node_HTTP = require("../Node.HTTP/index.js");
var Node_URL = require("../Node.URL/index.js");
var Payload_Internal_UrlParsing = require("../Payload.Internal.UrlParsing/index.js");
var Payload_ResponseTypes = require("../Payload.ResponseTypes/index.js");
var Payload_Server_Internal_ServerResponse = require("../Payload.Server.Internal.ServerResponse/index.js");
var Payload_Server_Internal_Trie = require("../Payload.Server.Internal.Trie/index.js");
var Payload_Server_Internal_UrlString = require("../Payload.Server.Internal.UrlString/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Payload_Server_Routable = require("../Payload.Server.Routable/index.js");
var Payload_Spec = require("../Payload.Spec/index.js");
var Record = require("../Record/index.js");
var Server = function (x) {
    return x;
};
var LogSilent = (function () {
    function LogSilent() {

    };
    LogSilent.value = new LogSilent();
    return LogSilent;
})();
var LogError = (function () {
    function LogError() {

    };
    LogError.value = new LogError();
    return LogError;
})();
var LogNormal = (function () {
    function LogNormal() {

    };
    LogNormal.value = new LogNormal();
    return LogNormal;
})();
var LogDebug = (function () {
    function LogDebug() {

    };
    LogDebug.value = new LogDebug();
    return LogDebug;
})();
var urlQuery = function (url) {
    return Data_Nullable.toMaybe(url.query);
};
var urlPath = function (url) {
    return Data_Maybe.maybe(new Data_Either.Left("No path"))(Data_Either.Right.create)(Data_Nullable.toMaybe(url.pathname));
};
var showUrl = function (v) {
    var fullPath = Data_String_Common.joinWith("/")(Data_Array.fromFoldable(Data_List_Types.foldableList)(v.path));
    return v.method + (" " + fullPath);
};
var showRoutes = function (routerTrie) {
    return Payload_Server_Internal_Trie.dumpEntries(Data_List_Types.showList(Payload_Internal_UrlParsing.showSegment))(Data_Functor.map(Payload_Server_Internal_Trie.functorTrie)(function (v) {
        return v.route;
    })(routerTrie));
};
var showRouteUrl = function (v) {
    if (v instanceof Data_List_Types.Cons) {
        return Data_Show.show(Payload_Internal_UrlParsing.showSegment)(v.value0) + (" /" + Data_String_Common.joinWith("/")(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(Data_Show.show(Payload_Internal_UrlParsing.showSegment))(v.value1))));
    };
    if (v instanceof Data_List_Types.Nil) {
        return "";
    };
    throw new Error("Failed pattern match at Payload.Server (line 215, column 1 - line 215, column 39): " + [ v.constructor.name ]);
};
var showMatches = function (matches) {
    var showMatch = function ($75) {
        return showRouteUrl((function (v) {
            return v.route;
        })($75));
    };
    return "    " + Data_String_Common.joinWith("\x0a    ")(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(showMatch)(matches)));
};
var runHandlers = function (v) {
    return function (routerTrie) {
        return function (reqUrl) {
            return function (req) {
                return function (res) {
                    var handleNext = function (v1) {
                        return function (v2) {
                            if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_List_Types.Cons) {
                                return Control_Bind.bind(Effect_Aff.bindAff)(v2.value0.handler(reqUrl)(req)(res))(function (outcome) {
                                    return handleNext(new Data_Maybe.Just(outcome))(v2.value1);
                                });
                            };
                            if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Payload_Server_Routable.Success) {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Server_Routable.Success.value);
                            };
                            if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof Payload_Server_Routable.Failure) {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(Payload_Server_Routable.Failure.value);
                            };
                            if (v1 instanceof Data_Maybe.Just && (v1.value0 instanceof Payload_Server_Routable.Forward && v2 instanceof Data_List_Types.Cons)) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v.logger.logDebug("-> Forwarding to next route. Previous failure: " + v1.value0.value0)))(function () {
                                    return Control_Bind.bind(Effect_Aff.bindAff)(v2.value0.handler(reqUrl)(req)(res))(function (outcome) {
                                        return handleNext(new Data_Maybe.Just(outcome))(v2.value1);
                                    });
                                });
                            };
                            if (v1 instanceof Data_Maybe.Just && (v1.value0 instanceof Payload_Server_Routable.Forward && v2 instanceof Data_List_Types.Nil)) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v.logger.logDebug("-> No more routes to try. Last failure: " + v1.value0.value0)))(function () {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Payload_Server_Routable.Forward("No match could handle"));
                                });
                            };
                            if (v2 instanceof Data_List_Types.Nil) {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Payload_Server_Routable.Forward("No match could handle"));
                            };
                            throw new Error("Failed pattern match at Payload.Server (line 191, column 5 - line 191, column 68): " + [ v1.constructor.name, v2.constructor.name ]);
                        };
                    };
                    var v1 = Payload_Server_Internal_Trie.lookup(new Data_List_Types.Cons(reqUrl.method, reqUrl.path))(routerTrie);
                    var matchesStr = Data_String_Common.joinWith("\x0a")(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function ($76) {
                        return showRouteUrl((function (v2) {
                            return v2.route;
                        })($76));
                    })(v1)));
                    return function __do() {
                        v.logger.logDebug(showUrl(reqUrl) + (" -> " + (Data_Show.show(Data_Show.showInt)(Data_List.length(v1)) + (" matches:\x0a" + matchesStr))))();
                        return Effect_Aff.launchAff_(Control_Bind.bind(Effect_Aff.bindAff)(handleNext(Data_Maybe.Nothing.value)(v1))(function (outcome) {
                            if (outcome instanceof Payload_Server_Routable.Forward) {
                                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Payload_Server_Internal_ServerResponse.writeResponse(res)(Payload_Server_Response.notFound(new Payload_ResponseTypes.StringBody(""))));
                            };
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                        }))();
                    };
                };
            };
        };
    };
};
var requestUrl = function (req) {
    var method = Node_HTTP.requestMethod(req);
    var parsedUrl = Node_URL.parse(Node_HTTP.requestURL(req));
    return Control_Bind.bind(Data_Either.bindEither)(urlPath(parsedUrl))(function (path) {
        var query = Data_Maybe.fromMaybe("")(Data_Nullable.toMaybe(parsedUrl.query));
        var pathSegments = Payload_Server_Internal_UrlString.urlToSegments(path);
        return Control_Applicative.pure(Data_Either.applicativeEither)({
            method: method,
            path: pathSegments,
            query: query
        });
    });
};
var handleRequest = function (v) {
    return function (routerTrie) {
        return function (req) {
            return function (res) {
                var url = Node_URL.parse(Node_HTTP.requestURL(req));
                return function __do() {
                    v.logger.logDebug(Node_HTTP.requestMethod(req) + (" " + Data_Show.show(Data_Nullable.showNullable(Data_Show.showString))(url.path)))();
                    var v1 = requestUrl(req);
                    if (v1 instanceof Data_Either.Right) {
                        return runHandlers(v)(routerTrie)(v1.value0)(req)(res)();
                    };
                    if (v1 instanceof Data_Either.Left) {
                        return Payload_Server_Internal_ServerResponse.writeResponse(res)(Payload_Server_Response.internalError(Payload_ResponseTypes.StringBody.create("Path could not be decoded: " + Data_Show.show(Data_Show.showString)(v1.value0))))();
                    };
                    throw new Error("Failed pattern match at Payload.Server (line 173, column 3 - line 176, column 97): " + [ v1.constructor.name ]);
                };
            };
        };
    };
};
var eqLogLevel = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof LogSilent && v1 instanceof LogSilent) {
            return true;
        };
        if (v instanceof LogError && v1 instanceof LogError) {
            return true;
        };
        if (v instanceof LogNormal && v1 instanceof LogNormal) {
            return true;
        };
        if (v instanceof LogDebug && v1 instanceof LogDebug) {
            return true;
        };
        return false;
    };
});
var ordLogLevel = new Data_Ord.Ord(function () {
    return eqLogLevel;
}, function (l1) {
    return function (l2) {
        var rank = function (v) {
            if (v instanceof LogSilent) {
                return 0;
            };
            if (v instanceof LogError) {
                return 1;
            };
            if (v instanceof LogNormal) {
                return 2;
            };
            if (v instanceof LogDebug) {
                return 3;
            };
            throw new Error("Failed pattern match at Payload.Server (line 64, column 7 - line 64, column 30): " + [ v.constructor.name ]);
        };
        return Data_Ord.compare(Data_Ord.ordInt)(rank(l1))(rank(l2));
    };
});
var mkLogger = function (logLevel) {
    var log_ = (function () {
        if (Data_Ord.greaterThanOrEq(ordLogLevel)(logLevel)(LogNormal.value)) {
            return Effect_Console.log;
        };
        return Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
    })();
    var logError = (function () {
        if (Data_Ord.greaterThanOrEq(ordLogLevel)(logLevel)(LogError.value)) {
            return Effect_Console.log;
        };
        return Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
    })();
    var logDebug = (function () {
        if (Data_Ord.greaterThanOrEq(ordLogLevel)(logLevel)(LogDebug.value)) {
            return Effect_Console.log;
        };
        return Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
    })();
    return {
        log: log_,
        logDebug: logDebug,
        logError: logError
    };
};
var mkConfig = function (v) {
    return {
        logger: mkLogger(v.logLevel)
    };
};
var dumpRoutes = function ($77) {
    return Effect_Console.log(showRoutes($77));
};
var defaultOpts = {
    backlog: Data_Maybe.Nothing.value,
    hostname: "0.0.0.0",
    port: 3000,
    logLevel: LogNormal.value
};
var close = function (v) {
    return Effect_Aff.makeAff(function (cb) {
        return function __do() {
            Node_HTTP.close(v)(cb(new Data_Either.Right(Data_Unit.unit)))();
            return Effect_Aff.nonCanceler;
        };
    });
};
var listen = function (v) {
    return function (v1) {
        return function (opts) {
            var startedMsg = "Server is running on http://" + (opts.hostname + (":" + Data_Show.show(Data_Show.showInt)(opts.port)));
            var errorMsg = function (e) {
                return "Closing server due to error: " + Data_Show.show(Effect_Exception.showError)(e);
            };
            return Effect_Aff.makeAff(function (cb) {
                return function __do() {
                    $foreign.onError(v1)(function (error) {
                        return cb(new Data_Either.Right(new Data_Either.Left(Data_Show.show(Effect_Exception.showError)(error))));
                    })();
                    Node_HTTP.listen(v1)(opts)(Control_Apply.applySecond(Effect.applyEffect)(v.logger.log(startedMsg))(cb(new Data_Either.Right(new Data_Either.Right(Data_Unit.unit)))))();
                    return function (error) {
                        return Control_Apply.applySecond(Effect_Aff.applyAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(v.logger.logError(errorMsg(error))))(close(v1));
                    };
                };
            });
        };
    };
};
var startGuarded = function (dictRoutable) {
    return function (opts) {
        return function (apiSpec) {
            return function (api) {
                var cfg = mkConfig(opts);
                var v = Payload_Server_Routable.mkRouter(dictRoutable)(apiSpec)(api);
                if (v instanceof Data_Either.Right) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(Server)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Node_HTTP.createServer(handleRequest(cfg)(v.value0)))))(function (server) {
                        var httpOpts = Record["delete"](new Data_Symbol.IsSymbol(function () {
                            return "logLevel";
                        }))()()(Data_Symbol.SProxy.value)(opts);
                        return Control_Bind.bind(Effect_Aff.bindAff)(listen(cfg)(server)(httpOpts))(function (listenResult) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Functor.map(Data_Either.functorEither)(Data_Function["const"](server))(listenResult));
                        });
                    });
                };
                if (v instanceof Data_Either.Left) {
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(v.value0));
                };
                throw new Error("Failed pattern match at Payload.Server (line 137, column 3 - line 143, column 32): " + [ v.constructor.name ]);
            };
        };
    };
};
var start = function (dictRoutable) {
    return function (opts) {
        return function (routeSpec) {
            return function (handlers) {
                return startGuarded(dictRoutable)(opts)(Payload_Spec.Spec.value)({
                    handlers: handlers,
                    guards: {}
                });
            };
        };
    };
};
var start_ = function (dictRoutable) {
    return start(dictRoutable)(defaultOpts);
};
var launch = function (dictRoutable) {
    return function (routeSpec) {
        return function (handlers) {
            return Effect_Aff.launchAff_(start_(dictRoutable)(routeSpec)(handlers));
        };
    };
};
var startGuarded_ = function (dictRoutable) {
    return startGuarded(dictRoutable)(defaultOpts);
};
module.exports = {
    launch: launch,
    start: start,
    start_: start_,
    startGuarded: startGuarded,
    startGuarded_: startGuarded_,
    defaultOpts: defaultOpts,
    LogSilent: LogSilent,
    LogError: LogError,
    LogNormal: LogNormal,
    LogDebug: LogDebug,
    close: close,
    eqLogLevel: eqLogLevel,
    ordLogLevel: ordLogLevel
};
