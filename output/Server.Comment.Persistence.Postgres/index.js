// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Database_Postgres = require("../Database.Postgres/index.js");
var Database_Postgres_SqlValue = require("../Database.Postgres.SqlValue/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Server_Comment_Type_Misc = require("../Server.Comment.Type.Misc/index.js");
var Server_Shared_Persistence_Postgres_Query = require("../Server.Shared.Persistence.Postgres.Query/index.js");
var Shared_Type_LongString = require("../Shared.Type.LongString/index.js");
var Shared_Type_LowercaseString = require("../Shared.Type.LowercaseString/index.js");
var Shared_Type_ShortString = require("../Shared.Type.ShortString/index.js");
var Simple_JSON = require("../Simple.JSON/index.js");
var Timestamp = require("../Timestamp/index.js");
var validateDelete = function (result) {
    if (result instanceof Data_Either.Left) {
        return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Server_Shared_Persistence_Postgres_Query.showPGError)(result.value0)));
    };
    if (result instanceof Data_Either.Right) {
        var v = Data_Array.head(result.value0);
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(Server_Comment_Type_Misc.NOT_FOUND.value));
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Right(v.value0.id));
        };
        throw new Error("Failed pattern match at Server.Comment.Persistence.Postgres (line 143, column 19 - line 145, column 38): " + [ v.constructor.name ]);
    };
    throw new Error("Failed pattern match at Server.Comment.Persistence.Postgres (line 141, column 3 - line 145, column 38): " + [ result.constructor.name ]);
};
var mkComment = function (r) {
    return {
        author: {
            bio: r.bio,
            following: r.following,
            image: r.image,
            username: r.username
        },
        body: r.body,
        createdAt: r.created_at,
        id: r.id,
        updatedAt: r.updated_at
    };
};
var validateInsert = function (result) {
    if (result instanceof Data_Either.Left) {
        if (result.value0 instanceof Server_Shared_Persistence_Postgres_Query.IntegrityError) {
            if (result.value0.value0.constraint === "email_unique") {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(Server_Comment_Type_Misc.EMAIL_EXITS.value));
            };
            return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Server_Shared_Persistence_Postgres_Query.showPGError)(result.value0)));
        };
        return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Server_Shared_Persistence_Postgres_Query.showPGError)(result.value0)));
    };
    if (result instanceof Data_Either.Right) {
        var v = Data_Array.head(result.value0);
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(Server_Comment_Type_Misc.NOT_FOUND.value));
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Either.Right.create(mkComment(v.value0)));
        };
        throw new Error("Failed pattern match at Server.Comment.Persistence.Postgres (line 135, column 19 - line 137, column 47): " + [ v.constructor.name ]);
    };
    throw new Error("Failed pattern match at Server.Comment.Persistence.Postgres (line 129, column 3 - line 137, column 47): " + [ result.constructor.name ]);
};
var validateSearch = function (result) {
    if (result instanceof Data_Either.Left) {
        return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(Data_Show.show(Server_Shared_Persistence_Postgres_Query.showPGError)(result.value0)));
    };
    if (result instanceof Data_Either.Right) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Functor.map(Data_Functor.functorArray)(mkComment)(result.value0));
    };
    throw new Error("Failed pattern match at Server.Comment.Persistence.Postgres (line 149, column 3 - line 151, column 44): " + [ result.constructor.name ]);
};
var search = function (pool) {
    return function (userId) {
        return function (slug) {
            return Database_Postgres.withClient(pool)(function (conn) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Server_Shared_Persistence_Postgres_Query.query(Server_Shared_Persistence_Postgres_Query.readJson(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "bio";
                }))(Simple_JSON.readMaybe(Shared_Type_LongString.readForeignLongString))(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "body";
                }))(Shared_Type_LongString.readForeignLongString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "created_at";
                }))(Timestamp.readTimestamp)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "following";
                }))(Simple_JSON.readBoolean)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Simple_JSON.readInt)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "image";
                }))(Simple_JSON.readMaybe(Shared_Type_LongString.readForeignLongString))(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "updated_at";
                }))(Timestamp.readTimestamp)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "username";
                }))(Shared_Type_ShortString.readForeignShortString)(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())))("SELECT\x0a  c.body,\x0a  timestamp_to_char(c.created_at) as created_at,\x0a  c.id AS id,\x0a  timestamp_to_char(c.updated_at) as updated_at,\x0a  u.bio,\x0a  f.followee_id IS NOT NULL AS FOLLOWING,\x0a  u.image,\x0a  u.username\x0aFROM\x0a  comment AS c\x0a  INNER JOIN \"article\" AS a ON c.article_id = a.id\x0a  INNER JOIN \"user\" AS u ON c.author_id = u.id\x0a  LEFT JOIN FOLLOWING AS f ON (c.author_id = f.followee_id)\x0a    AND (f.follower_id = $1)\x0aWHERE\x0a  a.slug = $2")([ Server_Shared_Persistence_Postgres_Query.p_(Database_Postgres_SqlValue.isSqlValueMaybe(Database_Postgres_SqlValue.isSqlValueInt))(userId), Server_Shared_Persistence_Postgres_Query.p_(Shared_Type_LowercaseString.isSqlValueLowercaseString)(slug) ])(conn))(validateSearch);
            });
        };
    };
};
var insert = function (pool) {
    return function (userId) {
        return function (raw) {
            return function (slug) {
                return Database_Postgres.withClient(pool)(function (conn) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Server_Shared_Persistence_Postgres_Query.query(Server_Shared_Persistence_Postgres_Query.readJson(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "bio";
                    }))(Simple_JSON.readMaybe(Shared_Type_LongString.readForeignLongString))(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "body";
                    }))(Shared_Type_LongString.readForeignLongString)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "created_at";
                    }))(Timestamp.readTimestamp)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "following";
                    }))(Simple_JSON.readBoolean)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "id";
                    }))(Simple_JSON.readInt)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "image";
                    }))(Simple_JSON.readMaybe(Shared_Type_LongString.readForeignLongString))(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "updated_at";
                    }))(Timestamp.readTimestamp)(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                        return "username";
                    }))(Shared_Type_ShortString.readForeignShortString)(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())))("WITH inserted AS (\x0aINSERT INTO comment (body, article_id, author_id)\x0a  SELECT\x0a    $2,\x0a    article.id,\x0a    $1\x0a  FROM\x0a    article\x0a  WHERE\x0a    article.slug = $3\x0a  RETURNING\x0a    *\x0a)\x0aSELECT\x0a  i.body,\x0a  timestamp_to_char(i.created_at) as created_at,\x0a  i.id as id,\x0a  timestamp_to_char(i.updated_at) as updated_at,\x0a  a.bio,\x0a  false as following,\x0a  a.image,\x0a  a.username\x0aFROM\x0a  \"user\" AS a, inserted as i\x0aWHERE\x0a  a.id = i.author_id")([ Server_Shared_Persistence_Postgres_Query.p_(Database_Postgres_SqlValue.isSqlValueInt)(userId), Server_Shared_Persistence_Postgres_Query.p_(Shared_Type_LongString.isSqlValueShortString)(raw.body), Server_Shared_Persistence_Postgres_Query.p_(Shared_Type_LowercaseString.isSqlValueLowercaseString)(slug) ])(conn))(validateInsert);
                });
            };
        };
    };
};
var $$delete = function (pool) {
    return function (id) {
        return function (slug) {
            return Database_Postgres.withClient(pool)(function (conn) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Server_Shared_Persistence_Postgres_Query.query(Server_Shared_Persistence_Postgres_Query.readJson(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons(new Data_Symbol.IsSymbol(function () {
                    return "id";
                }))(Simple_JSON.readInt)(Simple_JSON.readFieldsNil)()())))("DELETE FROM comment USING \"article\"\x0aWHERE article.slug = $2\x0a  AND comment.id = $1\x0aRETURNING\x0a  comment.id")([ Server_Shared_Persistence_Postgres_Query.p_(Database_Postgres_SqlValue.isSqlValueInt)(id), Server_Shared_Persistence_Postgres_Query.p_(Shared_Type_LowercaseString.isSqlValueLowercaseString)(slug) ])(conn))(validateDelete);
            });
        };
    };
};
var mkHandle = function (p) {
    return {
        "delete": $$delete(p),
        insert: insert(p),
        search: search(p)
    };
};
module.exports = {
    mkHandle: mkHandle,
    search: search,
    insert: insert,
    "delete": $$delete,
    mkComment: mkComment,
    validateInsert: validateInsert,
    validateDelete: validateDelete,
    validateSearch: validateSearch
};
