// Generated by purs version 0.13.8
"use strict";
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Unsent = (function () {
    function Unsent() {

    };
    Unsent.value = new Unsent();
    return Unsent;
})();
var Opened = (function () {
    function Opened() {

    };
    Opened.value = new Opened();
    return Opened;
})();
var HeadersReceived = (function () {
    function HeadersReceived() {

    };
    HeadersReceived.value = new HeadersReceived();
    return HeadersReceived;
})();
var Loading = (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Done = (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var toEnum = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Unsent.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Opened.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(HeadersReceived.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Done.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnum = function (v) {
    if (v instanceof Unsent) {
        return 0;
    };
    if (v instanceof Opened) {
        return 1;
    };
    if (v instanceof HeadersReceived) {
        return 2;
    };
    if (v instanceof Loading) {
        return 3;
    };
    if (v instanceof Done) {
        return 4;
    };
    throw new Error("Failed pattern match at Web.XHR.ReadyState (line 41, column 12 - line 46, column 12): " + [ v.constructor.name ]);
};
var eqReadyState = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Unsent && y instanceof Unsent) {
            return true;
        };
        if (x instanceof Opened && y instanceof Opened) {
            return true;
        };
        if (x instanceof HeadersReceived && y instanceof HeadersReceived) {
            return true;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return true;
        };
        if (x instanceof Done && y instanceof Done) {
            return true;
        };
        return false;
    };
});
var ordReadyState = new Data_Ord.Ord(function () {
    return eqReadyState;
}, function (x) {
    return function (y) {
        if (x instanceof Unsent && y instanceof Unsent) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Unsent) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Unsent) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Opened && y instanceof Opened) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Opened) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Opened) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof HeadersReceived && y instanceof HeadersReceived) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof HeadersReceived) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof HeadersReceived) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Loading && y instanceof Loading) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Loading) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Loading) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Done && y instanceof Done) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Web.XHR.ReadyState (line 16, column 1 - line 16, column 48): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumReadyState = new Data_Enum.Enum(function () {
    return ordReadyState;
}, Data_Enum.defaultPred(toEnum)(fromEnum), Data_Enum.defaultSucc(toEnum)(fromEnum));
var boundedReadyState = new Data_Bounded.Bounded(function () {
    return ordReadyState;
}, Unsent.value, Done.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
    return boundedReadyState;
}, function () {
    return enumReadyState;
}, 5, fromEnum, toEnum);
module.exports = {
    Unsent: Unsent,
    Opened: Opened,
    HeadersReceived: HeadersReceived,
    Loading: Loading,
    Done: Done,
    toEnum: toEnum,
    fromEnum: fromEnum,
    eqReadyState: eqReadyState,
    ordReadyState: ordReadyState,
    boundedReadyState: boundedReadyState,
    enumReadyState: enumReadyState,
    boundedEnumReadyState: boundedEnumReadyState
};
