// Generated by purs version 0.13.8
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Console = require("../Effect.Console/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Node_Encoding = require("../Node.Encoding/index.js");
var Node_HTTP = require("../Node.HTTP/index.js");
var Node_Stream = require("../Node.Stream/index.js");
var Payload_Headers = require("../Payload.Headers/index.js");
var Payload_ResponseTypes = require("../Payload.ResponseTypes/index.js");
var Payload_Server_Response = require("../Payload.Server.Response/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var writeStringBody = function (res) {
    return function (str) {
        var out = Node_HTTP.responseAsStream(res);
        return function __do() {
            Node_Stream.writeString(out)(Node_Encoding.UTF8.value)(str)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))();
            return Node_Stream.end(out)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))();
        };
    };
};
var writeStreamBody = function (res) {
    return function (stream) {
        return function __do() {
            Node_Stream.pipe(Type_Equality.to(Type_Equality.refl)(stream))(Node_HTTP.responseAsStream(res))();
            return Data_Unit.unit;
        };
    };
};
var writeHeaders = function (res) {
    return function (headers) {
        var v = Data_Functor.map(Data_Functor.functorArray)(function (v1) {
            return Node_HTTP.setHeader(res)(v1.value0)(v1.value1);
        })(Payload_Headers.toUnfoldable(Data_Unfoldable.unfoldableArray)(headers));
        return Data_Foldable.sequence_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(v);
    };
};
var endResponse = function (res) {
    return Effect_Aff.makeAff(function (cb) {
        return function __do() {
            $foreign.endResponse_(res)(Data_Unit.unit)(function (v) {
                return cb(new Data_Either.Right(Data_Unit.unit));
            })();
            return Effect_Aff.nonCanceler;
        };
    });
};
var writeBodyAndHeaders = function (res) {
    return function (headers) {
        return function (v) {
            if (v instanceof Payload_ResponseTypes.StringBody) {
                var contentLength = Data_Show.show(Data_Show.showInt)(Node_Encoding.byteLength(v.value0)(Node_Encoding.UTF8.value));
                var newHeaders = Payload_Headers.setIfNotDefined("content-length")(contentLength)(headers);
                return function __do() {
                    writeHeaders(res)(newHeaders)();
                    return writeStringBody(res)(v.value0)();
                };
            };
            if (v instanceof Payload_ResponseTypes.StreamBody) {
                return function __do() {
                    writeHeaders(res)(headers)();
                    return writeStreamBody(res)(v.value0)();
                };
            };
            if (v instanceof Payload_ResponseTypes.EmptyBody) {
                return function __do() {
                    writeHeaders(res)(headers)();
                    return Effect_Aff.launchAff_(endResponse(res))();
                };
            };
            throw new Error("Failed pattern match at Payload.Server.Internal.ServerResponse (line 41, column 1 - line 41, column 79): " + [ res.constructor.name, headers.constructor.name, v.constructor.name ]);
        };
    };
};
var writeResponse = function (res) {
    return function (v) {
        return function __do() {
            Node_HTTP.setStatusCode(res)(v.status.code)();
            Node_HTTP.setStatusMessage(res)(v.status.reason)();
            return writeBodyAndHeaders(res)(v.headers)(v.body)();
        };
    };
};
var sendResponse = function (res) {
    return function (serverResult) {
        var onComplete = function (v) {
            if (v instanceof Data_Either.Left) {
                return function __do() {
                    Effect_Console.log("Error sending response:\x0a  Server response:\x0a" + (Data_Show.show(Data_Either.showEither(Payload_ResponseTypes.showResponse(Payload_ResponseTypes.showResponseBody))(Payload_ResponseTypes.showResponse(Payload_ResponseTypes.showResponseBody)))(serverResult) + ("\x0a\x0a  Error(s): " + Data_Show.show(Effect_Exception.showError)(v.value0))))();
                    return writeResponse(res)(Payload_Server_Response.internalError(new Payload_ResponseTypes.StringBody("Error sending server response")))();
                };
            };
            if (v instanceof Data_Either.Right) {
                return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
            };
            throw new Error("Failed pattern match at Payload.Server.Internal.ServerResponse (line 30, column 5 - line 32, column 85): " + [ v.constructor.name ]);
        };
        return Effect_Aff.runAff_(onComplete)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)((function () {
            if (serverResult instanceof Data_Either.Right) {
                return writeResponse(res)(serverResult.value0);
            };
            if (serverResult instanceof Data_Either.Left) {
                return writeResponse(res)(serverResult.value0);
            };
            throw new Error("Failed pattern match at Payload.Server.Internal.ServerResponse (line 26, column 16 - line 28, column 38): " + [ serverResult.constructor.name ]);
        })()));
    };
};
module.exports = {
    sendResponse: sendResponse,
    writeResponse: writeResponse,
    writeBodyAndHeaders: writeBodyAndHeaders,
    endResponse: endResponse,
    writeHeaders: writeHeaders,
    writeStringBody: writeStringBody,
    writeStreamBody: writeStreamBody,
    endResponse_: $foreign.endResponse_
};
